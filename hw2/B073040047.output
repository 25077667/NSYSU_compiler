State 7 conflicts: 1 shift/reduce
State 15 conflicts: 5 reduce/reduce
State 47 conflicts: 2 shift/reduce
State 53 conflicts: 1 shift/reduce
State 77 conflicts: 1 shift/reduce
State 106 conflicts: 15 shift/reduce
State 121 conflicts: 1 reduce/reduce
State 126 conflicts: 4 shift/reduce
State 135 conflicts: 1 shift/reduce
State 144 conflicts: 1 shift/reduce
State 145 conflicts: 1 shift/reduce


Grammar

    0 $accept: classes $end

    1 classes: %empty
    2        | classes class

    3 $@1: %empty

    4 class: CLASS generic_id '{' $@1 fields methods '}'
    5      | CLASS generic_id '{' '}'

    6 fields: declaration_star

    7 methods: %empty
    8        | methods type generic_id '(' id_list_star ')' compound
    9        | methods MAIN '(' id_list_star ')' compound
   10        | methods VOID MAIN '(' id_list_star ')' compound

   11 id_list_star: %empty
   12             | id_list

   13 $@2: %empty

   14 compound: '{' $@2 declaration_star statement_star '}'

   15 declaration_star: %empty
   16                 | declaration_star specifier type id_list ';'
   17                 | declaration_star specifier type id_list_init ';'
   18                 | declaration_star FINAL type id_list_init ';'
   19                 | declaration_star specifier arr_type arr_init ';'

   20 specifier: %empty
   21          | STATIC

   22 id_list: generic_id
   23        | id_list ',' generic_id
   24        | id_list_init
   25        | id_list ',' id_list_init

   26 id_list_init: generic_id '=' const_expr
   27             | id_list_init ',' generic_id '=' const_expr

   28 generic_id: ID
   29           | generic_id '[' INT ']'
   30           | generic_id '.' ID

   31 type: INT
   32     | FLOAT
   33     | CHAR
   34     | BOOLEAN
   35     | VOID

   36 const_expr: INT_L
   37           | FLOAT_L
   38           | STR
   39           | generic_id
   40           | const_expr Infixop const_expr

   41 Infixop: '+'
   42        | '-'
   43        | '*'
   44        | '/'
   45        | '%'
   46        | '>'
   47        | '<'
   48        | '&'
   49        | '|'
   50        | LE
   51        | GE
   52        | EQ
   53        | NE
   54        | AND
   55        | OR

   56 arr_type: INT '[' ']'
   57         | FLOAT '[' ']'
   58         | CHAR '[' ']'
   59         | BOOLEAN '[' ']'

   60 arr_init: generic_id '=' NEW type '[' INT_L ']'

   61 statement_star: %empty
   62               | statement_star compound
   63               | statement_star simple ';'
   64               | statement_star conditional
   65               | statement_star loop
   66               | statement_star return ';'
   67               | statement_star call ';'
   68               | statement_star ';'

   69 simple: generic_id '=' expr ';'
   70       | PRINT '(' expr ')' ';'
   71       | generic_id PP ';'
   72       | generic_id MM ';'
   73       | expr ';'
   74       | ';'

   75 expr: term
   76     | expr '+' term
   77     | expr '-' term

   78 term: factor
   79     | term '*' factor
   80     | term '/' factor

   81 factor: const_expr
   82       | '(' expr ')'
   83       | PrefixOp generic_id
   84       | generic_id PostfixOp
   85       | call

   86 PrefixOp: PP
   87         | MM
   88         | '+'
   89         | '-'

   90 PostfixOp: PP
   91          | MM

   92 conditional: IF '(' bool_expr ')' simple ELSE simple
   93            | IF '(' bool_expr ')' compound ELSE simple
   94            | IF '(' bool_expr ')' compound ELSE compound
   95            | IF '(' bool_expr ')' simple ELSE compound

   96 bool_expr: expr

   97 loop: WHILE '(' bool_expr ')' simple
   98     | WHILE '(' bool_expr ')' compound
   99     | FOR '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' simple
  100     | FOR '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' compound

  101 ForInitOpt: %empty
  102           | id_list_init
  103           | INT id_list_init

  104 ForUpdateOpt: %empty
  105             | generic_id PP
  106             | generic_id MM

  107 return: RETURN expr ';'

  108 call: generic_id '(' expr_list ')' ';'

  109 expr_list: expr
  110          | expr ',' expr_list


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 45
    '&' (38) 48
    '(' (40) 8 9 10 70 82 92 93 94 95 97 98 99 100 108
    ')' (41) 8 9 10 70 82 92 93 94 95 97 98 99 100 108
    '*' (42) 43 79
    '+' (43) 41 76 88
    ',' (44) 23 25 27 110
    '-' (45) 42 77 89
    '.' (46) 30
    '/' (47) 44 80
    ';' (59) 16 17 18 19 63 66 67 68 69 70 71 72 73 74 99 100 107 108
    '<' (60) 47
    '=' (61) 26 27 60 69
    '>' (62) 46
    '[' (91) 29 56 57 58 59 60
    ']' (93) 29 56 57 58 59 60
    '{' (123) 4 5 14
    '|' (124) 49
    '}' (125) 4 5 14
    error (256)
    AND (258) 54
    BOOLEAN (259) 34 59
    CHAR (260) 33 58
    CLASS (261) 4 5
    ELSE (262) 92 93 94 95
    EQ (263) 52
    FINAL (264) 18
    FLOAT (265) 32 57
    FOR (266) 99 100
    GE (267) 51
    ID (268) 28 30
    IF (269) 92 93 94 95
    INT (270) 29 31 56 103
    LE (271) 50
    MAIN (272) 9 10
    MM (273) 72 87 91 106
    NE (274) 53
    NEW (275) 60
    INT_L (276) 36 60
    FLOAT_L (277) 37
    OR (278) 55
    PP (279) 71 86 90 105
    PRINT (280) 70
    RETURN (281) 107
    STATIC (282) 21
    STR (283) 38
    VOID (284) 10 35
    WHILE (285) 97 98


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    classes (51)
        on left: 1 2
        on right: 0 2
    class (52)
        on left: 4 5
        on right: 2
    $@1 (53)
        on left: 3
        on right: 4
    fields (54)
        on left: 6
        on right: 4
    methods (55)
        on left: 7 8 9 10
        on right: 4 8 9 10
    id_list_star (56)
        on left: 11 12
        on right: 8 9 10
    compound (57)
        on left: 14
        on right: 8 9 10 62 93 94 95 98 100
    $@2 (58)
        on left: 13
        on right: 14
    declaration_star (59)
        on left: 15 16 17 18 19
        on right: 6 14 16 17 18 19
    specifier (60)
        on left: 20 21
        on right: 16 17 19
    id_list (61)
        on left: 22 23 24 25
        on right: 12 16 23 25
    id_list_init (62)
        on left: 26 27
        on right: 17 18 24 25 27 102 103
    generic_id (63)
        on left: 28 29 30
        on right: 4 5 8 22 23 26 27 29 30 39 60 69 71 72 83 84 105 106 108
    type (64)
        on left: 31 32 33 34 35
        on right: 8 16 17 18 60
    const_expr (65)
        on left: 36 37 38 39 40
        on right: 26 27 40 81
    Infixop (66)
        on left: 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
        on right: 40
    arr_type (67)
        on left: 56 57 58 59
        on right: 19
    arr_init (68)
        on left: 60
        on right: 19
    statement_star (69)
        on left: 61 62 63 64 65 66 67 68
        on right: 14 62 63 64 65 66 67 68
    simple (70)
        on left: 69 70 71 72 73 74
        on right: 63 92 93 95 97 99
    expr (71)
        on left: 75 76 77
        on right: 69 70 73 76 77 82 96 107 109 110
    term (72)
        on left: 78 79 80
        on right: 75 76 77 79 80
    factor (73)
        on left: 81 82 83 84 85
        on right: 78 79 80
    PrefixOp (74)
        on left: 86 87 88 89
        on right: 83
    PostfixOp (75)
        on left: 90 91
        on right: 84
    conditional (76)
        on left: 92 93 94 95
        on right: 64
    bool_expr (77)
        on left: 96
        on right: 92 93 94 95 97 98 99 100
    loop (78)
        on left: 97 98 99 100
        on right: 65
    ForInitOpt (79)
        on left: 101 102 103
        on right: 99 100
    ForUpdateOpt (80)
        on left: 104 105 106
        on right: 99 100
    return (81)
        on left: 107
        on right: 66
    call (82)
        on left: 108
        on right: 67 85
    expr_list (83)
        on left: 109 110
        on right: 108 110


State 0

    0 $accept: . classes $end

    $default  reduce using rule 1 (classes)

    classes  go to state 1


State 1

    0 $accept: classes . $end
    2 classes: classes . class

    $end   shift, and go to state 2
    CLASS  shift, and go to state 3

    class  go to state 4


State 2

    0 $accept: classes $end .

    $default  accept


State 3

    4 class: CLASS . generic_id '{' $@1 fields methods '}'
    5      | CLASS . generic_id '{' '}'

    ID  shift, and go to state 5

    generic_id  go to state 6


State 4

    2 classes: classes class .

    $default  reduce using rule 2 (classes)


State 5

   28 generic_id: ID .

    $default  reduce using rule 28 (generic_id)


State 6

    4 class: CLASS generic_id . '{' $@1 fields methods '}'
    5      | CLASS generic_id . '{' '}'
   29 generic_id: generic_id . '[' INT ']'
   30           | generic_id . '.' ID

    '{'  shift, and go to state 7
    '['  shift, and go to state 8
    '.'  shift, and go to state 9


State 7

    4 class: CLASS generic_id '{' . $@1 fields methods '}'
    5      | CLASS generic_id '{' . '}'

    '}'  shift, and go to state 10

    '}'       [reduce using rule 3 ($@1)]
    $default  reduce using rule 3 ($@1)

    $@1  go to state 11


State 8

   29 generic_id: generic_id '[' . INT ']'

    INT  shift, and go to state 12


State 9

   30 generic_id: generic_id '.' . ID

    ID  shift, and go to state 13


State 10

    5 class: CLASS generic_id '{' '}' .

    $default  reduce using rule 5 (class)


State 11

    4 class: CLASS generic_id '{' $@1 . fields methods '}'

    $default  reduce using rule 15 (declaration_star)

    fields            go to state 14
    declaration_star  go to state 15


State 12

   29 generic_id: generic_id '[' INT . ']'

    ']'  shift, and go to state 16


State 13

   30 generic_id: generic_id '.' ID .

    $default  reduce using rule 30 (generic_id)


State 14

    4 class: CLASS generic_id '{' $@1 fields . methods '}'

    $default  reduce using rule 7 (methods)

    methods  go to state 17


State 15

    6 fields: declaration_star .
   16 declaration_star: declaration_star . specifier type id_list ';'
   17                 | declaration_star . specifier type id_list_init ';'
   18                 | declaration_star . FINAL type id_list_init ';'
   19                 | declaration_star . specifier arr_type arr_init ';'

    FINAL   shift, and go to state 18
    STATIC  shift, and go to state 19

    BOOLEAN   reduce using rule 6 (fields)
    BOOLEAN   [reduce using rule 20 (specifier)]
    CHAR      reduce using rule 6 (fields)
    CHAR      [reduce using rule 20 (specifier)]
    FLOAT     reduce using rule 6 (fields)
    FLOAT     [reduce using rule 20 (specifier)]
    INT       reduce using rule 6 (fields)
    INT       [reduce using rule 20 (specifier)]
    VOID      reduce using rule 6 (fields)
    VOID      [reduce using rule 20 (specifier)]
    $default  reduce using rule 6 (fields)

    specifier  go to state 20


State 16

   29 generic_id: generic_id '[' INT ']' .

    $default  reduce using rule 29 (generic_id)


State 17

    4 class: CLASS generic_id '{' $@1 fields methods . '}'
    8 methods: methods . type generic_id '(' id_list_star ')' compound
    9        | methods . MAIN '(' id_list_star ')' compound
   10        | methods . VOID MAIN '(' id_list_star ')' compound

    BOOLEAN  shift, and go to state 21
    CHAR     shift, and go to state 22
    FLOAT    shift, and go to state 23
    INT      shift, and go to state 24
    MAIN     shift, and go to state 25
    VOID     shift, and go to state 26
    '}'      shift, and go to state 27

    type  go to state 28


State 18

   18 declaration_star: declaration_star FINAL . type id_list_init ';'

    BOOLEAN  shift, and go to state 21
    CHAR     shift, and go to state 22
    FLOAT    shift, and go to state 23
    INT      shift, and go to state 24
    VOID     shift, and go to state 29

    type  go to state 30


State 19

   21 specifier: STATIC .

    $default  reduce using rule 21 (specifier)


State 20

   16 declaration_star: declaration_star specifier . type id_list ';'
   17                 | declaration_star specifier . type id_list_init ';'
   19                 | declaration_star specifier . arr_type arr_init ';'

    BOOLEAN  shift, and go to state 31
    CHAR     shift, and go to state 32
    FLOAT    shift, and go to state 33
    INT      shift, and go to state 34
    VOID     shift, and go to state 29

    type      go to state 35
    arr_type  go to state 36


State 21

   34 type: BOOLEAN .

    $default  reduce using rule 34 (type)


State 22

   33 type: CHAR .

    $default  reduce using rule 33 (type)


State 23

   32 type: FLOAT .

    $default  reduce using rule 32 (type)


State 24

   31 type: INT .

    $default  reduce using rule 31 (type)


State 25

    9 methods: methods MAIN . '(' id_list_star ')' compound

    '('  shift, and go to state 37


State 26

   10 methods: methods VOID . MAIN '(' id_list_star ')' compound
   35 type: VOID .

    MAIN  shift, and go to state 38

    $default  reduce using rule 35 (type)


State 27

    4 class: CLASS generic_id '{' $@1 fields methods '}' .

    $default  reduce using rule 4 (class)


State 28

    8 methods: methods type . generic_id '(' id_list_star ')' compound

    ID  shift, and go to state 5

    generic_id  go to state 39


State 29

   35 type: VOID .

    $default  reduce using rule 35 (type)


State 30

   18 declaration_star: declaration_star FINAL type . id_list_init ';'

    ID  shift, and go to state 5

    id_list_init  go to state 40
    generic_id    go to state 41


State 31

   34 type: BOOLEAN .
   59 arr_type: BOOLEAN . '[' ']'

    '['  shift, and go to state 42

    $default  reduce using rule 34 (type)


State 32

   33 type: CHAR .
   58 arr_type: CHAR . '[' ']'

    '['  shift, and go to state 43

    $default  reduce using rule 33 (type)


State 33

   32 type: FLOAT .
   57 arr_type: FLOAT . '[' ']'

    '['  shift, and go to state 44

    $default  reduce using rule 32 (type)


State 34

   31 type: INT .
   56 arr_type: INT . '[' ']'

    '['  shift, and go to state 45

    $default  reduce using rule 31 (type)


State 35

   16 declaration_star: declaration_star specifier type . id_list ';'
   17                 | declaration_star specifier type . id_list_init ';'

    ID  shift, and go to state 5

    id_list       go to state 46
    id_list_init  go to state 47
    generic_id    go to state 48


State 36

   19 declaration_star: declaration_star specifier arr_type . arr_init ';'

    ID  shift, and go to state 5

    generic_id  go to state 49
    arr_init    go to state 50


State 37

    9 methods: methods MAIN '(' . id_list_star ')' compound

    ID  shift, and go to state 5

    $default  reduce using rule 11 (id_list_star)

    id_list_star  go to state 51
    id_list       go to state 52
    id_list_init  go to state 53
    generic_id    go to state 48


State 38

   10 methods: methods VOID MAIN . '(' id_list_star ')' compound

    '('  shift, and go to state 54


State 39

    8 methods: methods type generic_id . '(' id_list_star ')' compound
   29 generic_id: generic_id . '[' INT ']'
   30           | generic_id . '.' ID

    '('  shift, and go to state 55
    '['  shift, and go to state 8
    '.'  shift, and go to state 9


State 40

   18 declaration_star: declaration_star FINAL type id_list_init . ';'
   27 id_list_init: id_list_init . ',' generic_id '=' const_expr

    ';'  shift, and go to state 56
    ','  shift, and go to state 57


State 41

   26 id_list_init: generic_id . '=' const_expr
   29 generic_id: generic_id . '[' INT ']'
   30           | generic_id . '.' ID

    '='  shift, and go to state 58
    '['  shift, and go to state 8
    '.'  shift, and go to state 9


State 42

   59 arr_type: BOOLEAN '[' . ']'

    ']'  shift, and go to state 59


State 43

   58 arr_type: CHAR '[' . ']'

    ']'  shift, and go to state 60


State 44

   57 arr_type: FLOAT '[' . ']'

    ']'  shift, and go to state 61


State 45

   56 arr_type: INT '[' . ']'

    ']'  shift, and go to state 62


State 46

   16 declaration_star: declaration_star specifier type id_list . ';'
   23 id_list: id_list . ',' generic_id
   25        | id_list . ',' id_list_init

    ';'  shift, and go to state 63
    ','  shift, and go to state 64


State 47

   17 declaration_star: declaration_star specifier type id_list_init . ';'
   24 id_list: id_list_init .
   27 id_list_init: id_list_init . ',' generic_id '=' const_expr

    ';'  shift, and go to state 65
    ','  shift, and go to state 57

    ';'  [reduce using rule 24 (id_list)]
    ','  [reduce using rule 24 (id_list)]


State 48

   22 id_list: generic_id .
   26 id_list_init: generic_id . '=' const_expr
   29 generic_id: generic_id . '[' INT ']'
   30           | generic_id . '.' ID

    '='  shift, and go to state 58
    '['  shift, and go to state 8
    '.'  shift, and go to state 9

    $default  reduce using rule 22 (id_list)


State 49

   29 generic_id: generic_id . '[' INT ']'
   30           | generic_id . '.' ID
   60 arr_init: generic_id . '=' NEW type '[' INT_L ']'

    '='  shift, and go to state 66
    '['  shift, and go to state 8
    '.'  shift, and go to state 9


State 50

   19 declaration_star: declaration_star specifier arr_type arr_init . ';'

    ';'  shift, and go to state 67


State 51

    9 methods: methods MAIN '(' id_list_star . ')' compound

    ')'  shift, and go to state 68


State 52

   12 id_list_star: id_list .
   23 id_list: id_list . ',' generic_id
   25        | id_list . ',' id_list_init

    ','  shift, and go to state 64

    $default  reduce using rule 12 (id_list_star)


State 53

   24 id_list: id_list_init .
   27 id_list_init: id_list_init . ',' generic_id '=' const_expr

    ','  shift, and go to state 57

    ','       [reduce using rule 24 (id_list)]
    $default  reduce using rule 24 (id_list)


State 54

   10 methods: methods VOID MAIN '(' . id_list_star ')' compound

    ID  shift, and go to state 5

    $default  reduce using rule 11 (id_list_star)

    id_list_star  go to state 69
    id_list       go to state 52
    id_list_init  go to state 53
    generic_id    go to state 48


State 55

    8 methods: methods type generic_id '(' . id_list_star ')' compound

    ID  shift, and go to state 5

    $default  reduce using rule 11 (id_list_star)

    id_list_star  go to state 70
    id_list       go to state 52
    id_list_init  go to state 53
    generic_id    go to state 48


State 56

   18 declaration_star: declaration_star FINAL type id_list_init ';' .

    $default  reduce using rule 18 (declaration_star)


State 57

   27 id_list_init: id_list_init ',' . generic_id '=' const_expr

    ID  shift, and go to state 5

    generic_id  go to state 71


State 58

   26 id_list_init: generic_id '=' . const_expr

    ID       shift, and go to state 5
    INT_L    shift, and go to state 72
    FLOAT_L  shift, and go to state 73
    STR      shift, and go to state 74

    generic_id  go to state 75
    const_expr  go to state 76


State 59

   59 arr_type: BOOLEAN '[' ']' .

    $default  reduce using rule 59 (arr_type)


State 60

   58 arr_type: CHAR '[' ']' .

    $default  reduce using rule 58 (arr_type)


State 61

   57 arr_type: FLOAT '[' ']' .

    $default  reduce using rule 57 (arr_type)


State 62

   56 arr_type: INT '[' ']' .

    $default  reduce using rule 56 (arr_type)


State 63

   16 declaration_star: declaration_star specifier type id_list ';' .

    $default  reduce using rule 16 (declaration_star)


State 64

   23 id_list: id_list ',' . generic_id
   25        | id_list ',' . id_list_init

    ID  shift, and go to state 5

    id_list_init  go to state 77
    generic_id    go to state 78


State 65

   17 declaration_star: declaration_star specifier type id_list_init ';' .

    $default  reduce using rule 17 (declaration_star)


State 66

   60 arr_init: generic_id '=' . NEW type '[' INT_L ']'

    NEW  shift, and go to state 79


State 67

   19 declaration_star: declaration_star specifier arr_type arr_init ';' .

    $default  reduce using rule 19 (declaration_star)


State 68

    9 methods: methods MAIN '(' id_list_star ')' . compound

    '{'  shift, and go to state 80

    compound  go to state 81


State 69

   10 methods: methods VOID MAIN '(' id_list_star . ')' compound

    ')'  shift, and go to state 82


State 70

    8 methods: methods type generic_id '(' id_list_star . ')' compound

    ')'  shift, and go to state 83


State 71

   27 id_list_init: id_list_init ',' generic_id . '=' const_expr
   29 generic_id: generic_id . '[' INT ']'
   30           | generic_id . '.' ID

    '='  shift, and go to state 84
    '['  shift, and go to state 8
    '.'  shift, and go to state 9


State 72

   36 const_expr: INT_L .

    $default  reduce using rule 36 (const_expr)


State 73

   37 const_expr: FLOAT_L .

    $default  reduce using rule 37 (const_expr)


State 74

   38 const_expr: STR .

    $default  reduce using rule 38 (const_expr)


State 75

   29 generic_id: generic_id . '[' INT ']'
   30           | generic_id . '.' ID
   39 const_expr: generic_id .

    '['  shift, and go to state 8
    '.'  shift, and go to state 9

    $default  reduce using rule 39 (const_expr)


State 76

   26 id_list_init: generic_id '=' const_expr .
   40 const_expr: const_expr . Infixop const_expr

    AND  shift, and go to state 85
    EQ   shift, and go to state 86
    GE   shift, and go to state 87
    LE   shift, and go to state 88
    NE   shift, and go to state 89
    OR   shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '%'  shift, and go to state 95
    '>'  shift, and go to state 96
    '<'  shift, and go to state 97
    '&'  shift, and go to state 98
    '|'  shift, and go to state 99

    $default  reduce using rule 26 (id_list_init)

    Infixop  go to state 100


State 77

   25 id_list: id_list ',' id_list_init .
   27 id_list_init: id_list_init . ',' generic_id '=' const_expr

    ','  shift, and go to state 57

    ','       [reduce using rule 25 (id_list)]
    $default  reduce using rule 25 (id_list)


State 78

   23 id_list: id_list ',' generic_id .
   26 id_list_init: generic_id . '=' const_expr
   29 generic_id: generic_id . '[' INT ']'
   30           | generic_id . '.' ID

    '='  shift, and go to state 58
    '['  shift, and go to state 8
    '.'  shift, and go to state 9

    $default  reduce using rule 23 (id_list)


State 79

   60 arr_init: generic_id '=' NEW . type '[' INT_L ']'

    BOOLEAN  shift, and go to state 21
    CHAR     shift, and go to state 22
    FLOAT    shift, and go to state 23
    INT      shift, and go to state 24
    VOID     shift, and go to state 29

    type  go to state 101


State 80

   14 compound: '{' . $@2 declaration_star statement_star '}'

    $default  reduce using rule 13 ($@2)

    $@2  go to state 102


State 81

    9 methods: methods MAIN '(' id_list_star ')' compound .

    $default  reduce using rule 9 (methods)


State 82

   10 methods: methods VOID MAIN '(' id_list_star ')' . compound

    '{'  shift, and go to state 80

    compound  go to state 103


State 83

    8 methods: methods type generic_id '(' id_list_star ')' . compound

    '{'  shift, and go to state 80

    compound  go to state 104


State 84

   27 id_list_init: id_list_init ',' generic_id '=' . const_expr

    ID       shift, and go to state 5
    INT_L    shift, and go to state 72
    FLOAT_L  shift, and go to state 73
    STR      shift, and go to state 74

    generic_id  go to state 75
    const_expr  go to state 105


State 85

   54 Infixop: AND .

    $default  reduce using rule 54 (Infixop)


State 86

   52 Infixop: EQ .

    $default  reduce using rule 52 (Infixop)


State 87

   51 Infixop: GE .

    $default  reduce using rule 51 (Infixop)


State 88

   50 Infixop: LE .

    $default  reduce using rule 50 (Infixop)


State 89

   53 Infixop: NE .

    $default  reduce using rule 53 (Infixop)


State 90

   55 Infixop: OR .

    $default  reduce using rule 55 (Infixop)


State 91

   41 Infixop: '+' .

    $default  reduce using rule 41 (Infixop)


State 92

   42 Infixop: '-' .

    $default  reduce using rule 42 (Infixop)


State 93

   43 Infixop: '*' .

    $default  reduce using rule 43 (Infixop)


State 94

   44 Infixop: '/' .

    $default  reduce using rule 44 (Infixop)


State 95

   45 Infixop: '%' .

    $default  reduce using rule 45 (Infixop)


State 96

   46 Infixop: '>' .

    $default  reduce using rule 46 (Infixop)


State 97

   47 Infixop: '<' .

    $default  reduce using rule 47 (Infixop)


State 98

   48 Infixop: '&' .

    $default  reduce using rule 48 (Infixop)


State 99

   49 Infixop: '|' .

    $default  reduce using rule 49 (Infixop)


State 100

   40 const_expr: const_expr Infixop . const_expr

    ID       shift, and go to state 5
    INT_L    shift, and go to state 72
    FLOAT_L  shift, and go to state 73
    STR      shift, and go to state 74

    generic_id  go to state 75
    const_expr  go to state 106


State 101

   60 arr_init: generic_id '=' NEW type . '[' INT_L ']'

    '['  shift, and go to state 107


State 102

   14 compound: '{' $@2 . declaration_star statement_star '}'

    $default  reduce using rule 15 (declaration_star)

    declaration_star  go to state 108


State 103

   10 methods: methods VOID MAIN '(' id_list_star ')' compound .

    $default  reduce using rule 10 (methods)


State 104

    8 methods: methods type generic_id '(' id_list_star ')' compound .

    $default  reduce using rule 8 (methods)


State 105

   27 id_list_init: id_list_init ',' generic_id '=' const_expr .
   40 const_expr: const_expr . Infixop const_expr

    AND  shift, and go to state 85
    EQ   shift, and go to state 86
    GE   shift, and go to state 87
    LE   shift, and go to state 88
    NE   shift, and go to state 89
    OR   shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '%'  shift, and go to state 95
    '>'  shift, and go to state 96
    '<'  shift, and go to state 97
    '&'  shift, and go to state 98
    '|'  shift, and go to state 99

    $default  reduce using rule 27 (id_list_init)

    Infixop  go to state 100


State 106

   40 const_expr: const_expr . Infixop const_expr
   40           | const_expr Infixop const_expr .

    AND  shift, and go to state 85
    EQ   shift, and go to state 86
    GE   shift, and go to state 87
    LE   shift, and go to state 88
    NE   shift, and go to state 89
    OR   shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '%'  shift, and go to state 95
    '>'  shift, and go to state 96
    '<'  shift, and go to state 97
    '&'  shift, and go to state 98
    '|'  shift, and go to state 99

    AND       [reduce using rule 40 (const_expr)]
    EQ        [reduce using rule 40 (const_expr)]
    GE        [reduce using rule 40 (const_expr)]
    LE        [reduce using rule 40 (const_expr)]
    NE        [reduce using rule 40 (const_expr)]
    OR        [reduce using rule 40 (const_expr)]
    '+'       [reduce using rule 40 (const_expr)]
    '-'       [reduce using rule 40 (const_expr)]
    '*'       [reduce using rule 40 (const_expr)]
    '/'       [reduce using rule 40 (const_expr)]
    '%'       [reduce using rule 40 (const_expr)]
    '>'       [reduce using rule 40 (const_expr)]
    '<'       [reduce using rule 40 (const_expr)]
    '&'       [reduce using rule 40 (const_expr)]
    '|'       [reduce using rule 40 (const_expr)]
    $default  reduce using rule 40 (const_expr)

    Infixop  go to state 100


State 107

   60 arr_init: generic_id '=' NEW type '[' . INT_L ']'

    INT_L  shift, and go to state 109


State 108

   14 compound: '{' $@2 declaration_star . statement_star '}'
   16 declaration_star: declaration_star . specifier type id_list ';'
   17                 | declaration_star . specifier type id_list_init ';'
   18                 | declaration_star . FINAL type id_list_init ';'
   19                 | declaration_star . specifier arr_type arr_init ';'

    FINAL   shift, and go to state 18
    STATIC  shift, and go to state 19

    BOOLEAN   reduce using rule 20 (specifier)
    CHAR      reduce using rule 20 (specifier)
    FLOAT     reduce using rule 20 (specifier)
    INT       reduce using rule 20 (specifier)
    VOID      reduce using rule 20 (specifier)
    $default  reduce using rule 61 (statement_star)

    specifier       go to state 20
    statement_star  go to state 110


State 109

   60 arr_init: generic_id '=' NEW type '[' INT_L . ']'

    ']'  shift, and go to state 111


State 110

   14 compound: '{' $@2 declaration_star statement_star . '}'
   62 statement_star: statement_star . compound
   63               | statement_star . simple ';'
   64               | statement_star . conditional
   65               | statement_star . loop
   66               | statement_star . return ';'
   67               | statement_star . call ';'
   68               | statement_star . ';'

    FOR      shift, and go to state 112
    ID       shift, and go to state 5
    IF       shift, and go to state 113
    MM       shift, and go to state 114
    INT_L    shift, and go to state 72
    FLOAT_L  shift, and go to state 73
    PP       shift, and go to state 115
    PRINT    shift, and go to state 116
    RETURN   shift, and go to state 117
    STR      shift, and go to state 74
    WHILE    shift, and go to state 118
    '{'      shift, and go to state 80
    '}'      shift, and go to state 119
    '('      shift, and go to state 120
    ';'      shift, and go to state 121
    '+'      shift, and go to state 122
    '-'      shift, and go to state 123

    compound     go to state 124
    generic_id   go to state 125
    const_expr   go to state 126
    simple       go to state 127
    expr         go to state 128
    term         go to state 129
    factor       go to state 130
    PrefixOp     go to state 131
    conditional  go to state 132
    loop         go to state 133
    return       go to state 134
    call         go to state 135


State 111

   60 arr_init: generic_id '=' NEW type '[' INT_L ']' .

    $default  reduce using rule 60 (arr_init)


State 112

   99 loop: FOR . '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' simple
  100     | FOR . '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' compound

    '('  shift, and go to state 136


State 113

   92 conditional: IF . '(' bool_expr ')' simple ELSE simple
   93            | IF . '(' bool_expr ')' compound ELSE simple
   94            | IF . '(' bool_expr ')' compound ELSE compound
   95            | IF . '(' bool_expr ')' simple ELSE compound

    '('  shift, and go to state 137


State 114

   87 PrefixOp: MM .

    $default  reduce using rule 87 (PrefixOp)


State 115

   86 PrefixOp: PP .

    $default  reduce using rule 86 (PrefixOp)


State 116

   70 simple: PRINT . '(' expr ')' ';'

    '('  shift, and go to state 138


State 117

  107 return: RETURN . expr ';'

    ID       shift, and go to state 5
    MM       shift, and go to state 114
    INT_L    shift, and go to state 72
    FLOAT_L  shift, and go to state 73
    PP       shift, and go to state 115
    STR      shift, and go to state 74
    '('      shift, and go to state 120
    '+'      shift, and go to state 122
    '-'      shift, and go to state 123

    generic_id  go to state 139
    const_expr  go to state 126
    expr        go to state 140
    term        go to state 129
    factor      go to state 130
    PrefixOp    go to state 131
    call        go to state 141


State 118

   97 loop: WHILE . '(' bool_expr ')' simple
   98     | WHILE . '(' bool_expr ')' compound

    '('  shift, and go to state 142


State 119

   14 compound: '{' $@2 declaration_star statement_star '}' .

    $default  reduce using rule 14 (compound)


State 120

   82 factor: '(' . expr ')'

    ID       shift, and go to state 5
    MM       shift, and go to state 114
    INT_L    shift, and go to state 72
    FLOAT_L  shift, and go to state 73
    PP       shift, and go to state 115
    STR      shift, and go to state 74
    '('      shift, and go to state 120
    '+'      shift, and go to state 122
    '-'      shift, and go to state 123

    generic_id  go to state 139
    const_expr  go to state 126
    expr        go to state 143
    term        go to state 129
    factor      go to state 130
    PrefixOp    go to state 131
    call        go to state 141


State 121

   68 statement_star: statement_star ';' .
   74 simple: ';' .

    ';'       reduce using rule 68 (statement_star)
    ';'       [reduce using rule 74 (simple)]
    $default  reduce using rule 68 (statement_star)


State 122

   88 PrefixOp: '+' .

    $default  reduce using rule 88 (PrefixOp)


State 123

   89 PrefixOp: '-' .

    $default  reduce using rule 89 (PrefixOp)


State 124

   62 statement_star: statement_star compound .

    $default  reduce using rule 62 (statement_star)


State 125

   29 generic_id: generic_id . '[' INT ']'
   30           | generic_id . '.' ID
   39 const_expr: generic_id .
   69 simple: generic_id . '=' expr ';'
   71       | generic_id . PP ';'
   72       | generic_id . MM ';'
   84 factor: generic_id . PostfixOp
  108 call: generic_id . '(' expr_list ')' ';'

    MM   shift, and go to state 144
    PP   shift, and go to state 145
    '('  shift, and go to state 146
    '='  shift, and go to state 147
    '['  shift, and go to state 8
    '.'  shift, and go to state 9

    $default  reduce using rule 39 (const_expr)

    PostfixOp  go to state 148


State 126

   40 const_expr: const_expr . Infixop const_expr
   81 factor: const_expr .

    AND  shift, and go to state 85
    EQ   shift, and go to state 86
    GE   shift, and go to state 87
    LE   shift, and go to state 88
    NE   shift, and go to state 89
    OR   shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '%'  shift, and go to state 95
    '>'  shift, and go to state 96
    '<'  shift, and go to state 97
    '&'  shift, and go to state 98
    '|'  shift, and go to state 99

    '+'       [reduce using rule 81 (factor)]
    '-'       [reduce using rule 81 (factor)]
    '*'       [reduce using rule 81 (factor)]
    '/'       [reduce using rule 81 (factor)]
    $default  reduce using rule 81 (factor)

    Infixop  go to state 100


State 127

   63 statement_star: statement_star simple . ';'

    ';'  shift, and go to state 149


State 128

   73 simple: expr . ';'
   76 expr: expr . '+' term
   77     | expr . '-' term

    ';'  shift, and go to state 150
    '+'  shift, and go to state 151
    '-'  shift, and go to state 152


State 129

   75 expr: term .
   79 term: term . '*' factor
   80     | term . '/' factor

    '*'  shift, and go to state 153
    '/'  shift, and go to state 154

    $default  reduce using rule 75 (expr)


State 130

   78 term: factor .

    $default  reduce using rule 78 (term)


State 131

   83 factor: PrefixOp . generic_id

    ID  shift, and go to state 5

    generic_id  go to state 155


State 132

   64 statement_star: statement_star conditional .

    $default  reduce using rule 64 (statement_star)


State 133

   65 statement_star: statement_star loop .

    $default  reduce using rule 65 (statement_star)


State 134

   66 statement_star: statement_star return . ';'

    ';'  shift, and go to state 156


State 135

   67 statement_star: statement_star call . ';'
   85 factor: call .

    ';'  shift, and go to state 157

    ';'       [reduce using rule 85 (factor)]
    $default  reduce using rule 85 (factor)


State 136

   99 loop: FOR '(' . ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' simple
  100     | FOR '(' . ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' compound

    ID   shift, and go to state 5
    INT  shift, and go to state 158

    $default  reduce using rule 101 (ForInitOpt)

    id_list_init  go to state 159
    generic_id    go to state 41
    ForInitOpt    go to state 160


State 137

   92 conditional: IF '(' . bool_expr ')' simple ELSE simple
   93            | IF '(' . bool_expr ')' compound ELSE simple
   94            | IF '(' . bool_expr ')' compound ELSE compound
   95            | IF '(' . bool_expr ')' simple ELSE compound

    ID       shift, and go to state 5
    MM       shift, and go to state 114
    INT_L    shift, and go to state 72
    FLOAT_L  shift, and go to state 73
    PP       shift, and go to state 115
    STR      shift, and go to state 74
    '('      shift, and go to state 120
    '+'      shift, and go to state 122
    '-'      shift, and go to state 123

    generic_id  go to state 139
    const_expr  go to state 126
    expr        go to state 161
    term        go to state 129
    factor      go to state 130
    PrefixOp    go to state 131
    bool_expr   go to state 162
    call        go to state 141


State 138

   70 simple: PRINT '(' . expr ')' ';'

    ID       shift, and go to state 5
    MM       shift, and go to state 114
    INT_L    shift, and go to state 72
    FLOAT_L  shift, and go to state 73
    PP       shift, and go to state 115
    STR      shift, and go to state 74
    '('      shift, and go to state 120
    '+'      shift, and go to state 122
    '-'      shift, and go to state 123

    generic_id  go to state 139
    const_expr  go to state 126
    expr        go to state 163
    term        go to state 129
    factor      go to state 130
    PrefixOp    go to state 131
    call        go to state 141


State 139

   29 generic_id: generic_id . '[' INT ']'
   30           | generic_id . '.' ID
   39 const_expr: generic_id .
   84 factor: generic_id . PostfixOp
  108 call: generic_id . '(' expr_list ')' ';'

    MM   shift, and go to state 164
    PP   shift, and go to state 165
    '('  shift, and go to state 146
    '['  shift, and go to state 8
    '.'  shift, and go to state 9

    $default  reduce using rule 39 (const_expr)

    PostfixOp  go to state 148


State 140

   76 expr: expr . '+' term
   77     | expr . '-' term
  107 return: RETURN expr . ';'

    ';'  shift, and go to state 166
    '+'  shift, and go to state 151
    '-'  shift, and go to state 152


State 141

   85 factor: call .

    $default  reduce using rule 85 (factor)


State 142

   97 loop: WHILE '(' . bool_expr ')' simple
   98     | WHILE '(' . bool_expr ')' compound

    ID       shift, and go to state 5
    MM       shift, and go to state 114
    INT_L    shift, and go to state 72
    FLOAT_L  shift, and go to state 73
    PP       shift, and go to state 115
    STR      shift, and go to state 74
    '('      shift, and go to state 120
    '+'      shift, and go to state 122
    '-'      shift, and go to state 123

    generic_id  go to state 139
    const_expr  go to state 126
    expr        go to state 161
    term        go to state 129
    factor      go to state 130
    PrefixOp    go to state 131
    bool_expr   go to state 167
    call        go to state 141


State 143

   76 expr: expr . '+' term
   77     | expr . '-' term
   82 factor: '(' expr . ')'

    ')'  shift, and go to state 168
    '+'  shift, and go to state 151
    '-'  shift, and go to state 152


State 144

   72 simple: generic_id MM . ';'
   91 PostfixOp: MM .

    ';'  shift, and go to state 169

    ';'       [reduce using rule 91 (PostfixOp)]
    $default  reduce using rule 91 (PostfixOp)


State 145

   71 simple: generic_id PP . ';'
   90 PostfixOp: PP .

    ';'  shift, and go to state 170

    ';'       [reduce using rule 90 (PostfixOp)]
    $default  reduce using rule 90 (PostfixOp)


State 146

  108 call: generic_id '(' . expr_list ')' ';'

    ID       shift, and go to state 5
    MM       shift, and go to state 114
    INT_L    shift, and go to state 72
    FLOAT_L  shift, and go to state 73
    PP       shift, and go to state 115
    STR      shift, and go to state 74
    '('      shift, and go to state 120
    '+'      shift, and go to state 122
    '-'      shift, and go to state 123

    generic_id  go to state 139
    const_expr  go to state 126
    expr        go to state 171
    term        go to state 129
    factor      go to state 130
    PrefixOp    go to state 131
    call        go to state 141
    expr_list   go to state 172


State 147

   69 simple: generic_id '=' . expr ';'

    ID       shift, and go to state 5
    MM       shift, and go to state 114
    INT_L    shift, and go to state 72
    FLOAT_L  shift, and go to state 73
    PP       shift, and go to state 115
    STR      shift, and go to state 74
    '('      shift, and go to state 120
    '+'      shift, and go to state 122
    '-'      shift, and go to state 123

    generic_id  go to state 139
    const_expr  go to state 126
    expr        go to state 173
    term        go to state 129
    factor      go to state 130
    PrefixOp    go to state 131
    call        go to state 141


State 148

   84 factor: generic_id PostfixOp .

    $default  reduce using rule 84 (factor)


State 149

   63 statement_star: statement_star simple ';' .

    $default  reduce using rule 63 (statement_star)


State 150

   73 simple: expr ';' .

    $default  reduce using rule 73 (simple)


State 151

   76 expr: expr '+' . term

    ID       shift, and go to state 5
    MM       shift, and go to state 114
    INT_L    shift, and go to state 72
    FLOAT_L  shift, and go to state 73
    PP       shift, and go to state 115
    STR      shift, and go to state 74
    '('      shift, and go to state 120
    '+'      shift, and go to state 122
    '-'      shift, and go to state 123

    generic_id  go to state 139
    const_expr  go to state 126
    term        go to state 174
    factor      go to state 130
    PrefixOp    go to state 131
    call        go to state 141


State 152

   77 expr: expr '-' . term

    ID       shift, and go to state 5
    MM       shift, and go to state 114
    INT_L    shift, and go to state 72
    FLOAT_L  shift, and go to state 73
    PP       shift, and go to state 115
    STR      shift, and go to state 74
    '('      shift, and go to state 120
    '+'      shift, and go to state 122
    '-'      shift, and go to state 123

    generic_id  go to state 139
    const_expr  go to state 126
    term        go to state 175
    factor      go to state 130
    PrefixOp    go to state 131
    call        go to state 141


State 153

   79 term: term '*' . factor

    ID       shift, and go to state 5
    MM       shift, and go to state 114
    INT_L    shift, and go to state 72
    FLOAT_L  shift, and go to state 73
    PP       shift, and go to state 115
    STR      shift, and go to state 74
    '('      shift, and go to state 120
    '+'      shift, and go to state 122
    '-'      shift, and go to state 123

    generic_id  go to state 139
    const_expr  go to state 126
    factor      go to state 176
    PrefixOp    go to state 131
    call        go to state 141


State 154

   80 term: term '/' . factor

    ID       shift, and go to state 5
    MM       shift, and go to state 114
    INT_L    shift, and go to state 72
    FLOAT_L  shift, and go to state 73
    PP       shift, and go to state 115
    STR      shift, and go to state 74
    '('      shift, and go to state 120
    '+'      shift, and go to state 122
    '-'      shift, and go to state 123

    generic_id  go to state 139
    const_expr  go to state 126
    factor      go to state 177
    PrefixOp    go to state 131
    call        go to state 141


State 155

   29 generic_id: generic_id . '[' INT ']'
   30           | generic_id . '.' ID
   83 factor: PrefixOp generic_id .

    '['  shift, and go to state 8
    '.'  shift, and go to state 9

    $default  reduce using rule 83 (factor)


State 156

   66 statement_star: statement_star return ';' .

    $default  reduce using rule 66 (statement_star)


State 157

   67 statement_star: statement_star call ';' .

    $default  reduce using rule 67 (statement_star)


State 158

  103 ForInitOpt: INT . id_list_init

    ID  shift, and go to state 5

    id_list_init  go to state 178
    generic_id    go to state 41


State 159

   27 id_list_init: id_list_init . ',' generic_id '=' const_expr
  102 ForInitOpt: id_list_init .

    ','  shift, and go to state 57

    $default  reduce using rule 102 (ForInitOpt)


State 160

   99 loop: FOR '(' ForInitOpt . ';' bool_expr ';' ForUpdateOpt ')' simple
  100     | FOR '(' ForInitOpt . ';' bool_expr ';' ForUpdateOpt ')' compound

    ';'  shift, and go to state 179


State 161

   76 expr: expr . '+' term
   77     | expr . '-' term
   96 bool_expr: expr .

    '+'  shift, and go to state 151
    '-'  shift, and go to state 152

    $default  reduce using rule 96 (bool_expr)


State 162

   92 conditional: IF '(' bool_expr . ')' simple ELSE simple
   93            | IF '(' bool_expr . ')' compound ELSE simple
   94            | IF '(' bool_expr . ')' compound ELSE compound
   95            | IF '(' bool_expr . ')' simple ELSE compound

    ')'  shift, and go to state 180


State 163

   70 simple: PRINT '(' expr . ')' ';'
   76 expr: expr . '+' term
   77     | expr . '-' term

    ')'  shift, and go to state 181
    '+'  shift, and go to state 151
    '-'  shift, and go to state 152


State 164

   91 PostfixOp: MM .

    $default  reduce using rule 91 (PostfixOp)


State 165

   90 PostfixOp: PP .

    $default  reduce using rule 90 (PostfixOp)


State 166

  107 return: RETURN expr ';' .

    $default  reduce using rule 107 (return)


State 167

   97 loop: WHILE '(' bool_expr . ')' simple
   98     | WHILE '(' bool_expr . ')' compound

    ')'  shift, and go to state 182


State 168

   82 factor: '(' expr ')' .

    $default  reduce using rule 82 (factor)


State 169

   72 simple: generic_id MM ';' .

    $default  reduce using rule 72 (simple)


State 170

   71 simple: generic_id PP ';' .

    $default  reduce using rule 71 (simple)


State 171

   76 expr: expr . '+' term
   77     | expr . '-' term
  109 expr_list: expr .
  110          | expr . ',' expr_list

    ','  shift, and go to state 183
    '+'  shift, and go to state 151
    '-'  shift, and go to state 152

    $default  reduce using rule 109 (expr_list)


State 172

  108 call: generic_id '(' expr_list . ')' ';'

    ')'  shift, and go to state 184


State 173

   69 simple: generic_id '=' expr . ';'
   76 expr: expr . '+' term
   77     | expr . '-' term

    ';'  shift, and go to state 185
    '+'  shift, and go to state 151
    '-'  shift, and go to state 152


State 174

   76 expr: expr '+' term .
   79 term: term . '*' factor
   80     | term . '/' factor

    '*'  shift, and go to state 153
    '/'  shift, and go to state 154

    $default  reduce using rule 76 (expr)


State 175

   77 expr: expr '-' term .
   79 term: term . '*' factor
   80     | term . '/' factor

    '*'  shift, and go to state 153
    '/'  shift, and go to state 154

    $default  reduce using rule 77 (expr)


State 176

   79 term: term '*' factor .

    $default  reduce using rule 79 (term)


State 177

   80 term: term '/' factor .

    $default  reduce using rule 80 (term)


State 178

   27 id_list_init: id_list_init . ',' generic_id '=' const_expr
  103 ForInitOpt: INT id_list_init .

    ','  shift, and go to state 57

    $default  reduce using rule 103 (ForInitOpt)


State 179

   99 loop: FOR '(' ForInitOpt ';' . bool_expr ';' ForUpdateOpt ')' simple
  100     | FOR '(' ForInitOpt ';' . bool_expr ';' ForUpdateOpt ')' compound

    ID       shift, and go to state 5
    MM       shift, and go to state 114
    INT_L    shift, and go to state 72
    FLOAT_L  shift, and go to state 73
    PP       shift, and go to state 115
    STR      shift, and go to state 74
    '('      shift, and go to state 120
    '+'      shift, and go to state 122
    '-'      shift, and go to state 123

    generic_id  go to state 139
    const_expr  go to state 126
    expr        go to state 161
    term        go to state 129
    factor      go to state 130
    PrefixOp    go to state 131
    bool_expr   go to state 186
    call        go to state 141


State 180

   92 conditional: IF '(' bool_expr ')' . simple ELSE simple
   93            | IF '(' bool_expr ')' . compound ELSE simple
   94            | IF '(' bool_expr ')' . compound ELSE compound
   95            | IF '(' bool_expr ')' . simple ELSE compound

    ID       shift, and go to state 5
    MM       shift, and go to state 114
    INT_L    shift, and go to state 72
    FLOAT_L  shift, and go to state 73
    PP       shift, and go to state 115
    PRINT    shift, and go to state 116
    STR      shift, and go to state 74
    '{'      shift, and go to state 80
    '('      shift, and go to state 120
    ';'      shift, and go to state 187
    '+'      shift, and go to state 122
    '-'      shift, and go to state 123

    compound    go to state 188
    generic_id  go to state 125
    const_expr  go to state 126
    simple      go to state 189
    expr        go to state 128
    term        go to state 129
    factor      go to state 130
    PrefixOp    go to state 131
    call        go to state 141


State 181

   70 simple: PRINT '(' expr ')' . ';'

    ';'  shift, and go to state 190


State 182

   97 loop: WHILE '(' bool_expr ')' . simple
   98     | WHILE '(' bool_expr ')' . compound

    ID       shift, and go to state 5
    MM       shift, and go to state 114
    INT_L    shift, and go to state 72
    FLOAT_L  shift, and go to state 73
    PP       shift, and go to state 115
    PRINT    shift, and go to state 116
    STR      shift, and go to state 74
    '{'      shift, and go to state 80
    '('      shift, and go to state 120
    ';'      shift, and go to state 187
    '+'      shift, and go to state 122
    '-'      shift, and go to state 123

    compound    go to state 191
    generic_id  go to state 125
    const_expr  go to state 126
    simple      go to state 192
    expr        go to state 128
    term        go to state 129
    factor      go to state 130
    PrefixOp    go to state 131
    call        go to state 141


State 183

  110 expr_list: expr ',' . expr_list

    ID       shift, and go to state 5
    MM       shift, and go to state 114
    INT_L    shift, and go to state 72
    FLOAT_L  shift, and go to state 73
    PP       shift, and go to state 115
    STR      shift, and go to state 74
    '('      shift, and go to state 120
    '+'      shift, and go to state 122
    '-'      shift, and go to state 123

    generic_id  go to state 139
    const_expr  go to state 126
    expr        go to state 171
    term        go to state 129
    factor      go to state 130
    PrefixOp    go to state 131
    call        go to state 141
    expr_list   go to state 193


State 184

  108 call: generic_id '(' expr_list ')' . ';'

    ';'  shift, and go to state 194


State 185

   69 simple: generic_id '=' expr ';' .

    $default  reduce using rule 69 (simple)


State 186

   99 loop: FOR '(' ForInitOpt ';' bool_expr . ';' ForUpdateOpt ')' simple
  100     | FOR '(' ForInitOpt ';' bool_expr . ';' ForUpdateOpt ')' compound

    ';'  shift, and go to state 195


State 187

   74 simple: ';' .

    $default  reduce using rule 74 (simple)


State 188

   93 conditional: IF '(' bool_expr ')' compound . ELSE simple
   94            | IF '(' bool_expr ')' compound . ELSE compound

    ELSE  shift, and go to state 196


State 189

   92 conditional: IF '(' bool_expr ')' simple . ELSE simple
   95            | IF '(' bool_expr ')' simple . ELSE compound

    ELSE  shift, and go to state 197


State 190

   70 simple: PRINT '(' expr ')' ';' .

    $default  reduce using rule 70 (simple)


State 191

   98 loop: WHILE '(' bool_expr ')' compound .

    $default  reduce using rule 98 (loop)


State 192

   97 loop: WHILE '(' bool_expr ')' simple .

    $default  reduce using rule 97 (loop)


State 193

  110 expr_list: expr ',' expr_list .

    $default  reduce using rule 110 (expr_list)


State 194

  108 call: generic_id '(' expr_list ')' ';' .

    $default  reduce using rule 108 (call)


State 195

   99 loop: FOR '(' ForInitOpt ';' bool_expr ';' . ForUpdateOpt ')' simple
  100     | FOR '(' ForInitOpt ';' bool_expr ';' . ForUpdateOpt ')' compound

    ID  shift, and go to state 5

    $default  reduce using rule 104 (ForUpdateOpt)

    generic_id    go to state 198
    ForUpdateOpt  go to state 199


State 196

   93 conditional: IF '(' bool_expr ')' compound ELSE . simple
   94            | IF '(' bool_expr ')' compound ELSE . compound

    ID       shift, and go to state 5
    MM       shift, and go to state 114
    INT_L    shift, and go to state 72
    FLOAT_L  shift, and go to state 73
    PP       shift, and go to state 115
    PRINT    shift, and go to state 116
    STR      shift, and go to state 74
    '{'      shift, and go to state 80
    '('      shift, and go to state 120
    ';'      shift, and go to state 187
    '+'      shift, and go to state 122
    '-'      shift, and go to state 123

    compound    go to state 200
    generic_id  go to state 125
    const_expr  go to state 126
    simple      go to state 201
    expr        go to state 128
    term        go to state 129
    factor      go to state 130
    PrefixOp    go to state 131
    call        go to state 141


State 197

   92 conditional: IF '(' bool_expr ')' simple ELSE . simple
   95            | IF '(' bool_expr ')' simple ELSE . compound

    ID       shift, and go to state 5
    MM       shift, and go to state 114
    INT_L    shift, and go to state 72
    FLOAT_L  shift, and go to state 73
    PP       shift, and go to state 115
    PRINT    shift, and go to state 116
    STR      shift, and go to state 74
    '{'      shift, and go to state 80
    '('      shift, and go to state 120
    ';'      shift, and go to state 187
    '+'      shift, and go to state 122
    '-'      shift, and go to state 123

    compound    go to state 202
    generic_id  go to state 125
    const_expr  go to state 126
    simple      go to state 203
    expr        go to state 128
    term        go to state 129
    factor      go to state 130
    PrefixOp    go to state 131
    call        go to state 141


State 198

   29 generic_id: generic_id . '[' INT ']'
   30           | generic_id . '.' ID
  105 ForUpdateOpt: generic_id . PP
  106             | generic_id . MM

    MM   shift, and go to state 204
    PP   shift, and go to state 205
    '['  shift, and go to state 8
    '.'  shift, and go to state 9


State 199

   99 loop: FOR '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt . ')' simple
  100     | FOR '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt . ')' compound

    ')'  shift, and go to state 206


State 200

   94 conditional: IF '(' bool_expr ')' compound ELSE compound .

    $default  reduce using rule 94 (conditional)


State 201

   93 conditional: IF '(' bool_expr ')' compound ELSE simple .

    $default  reduce using rule 93 (conditional)


State 202

   95 conditional: IF '(' bool_expr ')' simple ELSE compound .

    $default  reduce using rule 95 (conditional)


State 203

   92 conditional: IF '(' bool_expr ')' simple ELSE simple .

    $default  reduce using rule 92 (conditional)


State 204

  106 ForUpdateOpt: generic_id MM .

    $default  reduce using rule 106 (ForUpdateOpt)


State 205

  105 ForUpdateOpt: generic_id PP .

    $default  reduce using rule 105 (ForUpdateOpt)


State 206

   99 loop: FOR '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' . simple
  100     | FOR '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' . compound

    ID       shift, and go to state 5
    MM       shift, and go to state 114
    INT_L    shift, and go to state 72
    FLOAT_L  shift, and go to state 73
    PP       shift, and go to state 115
    PRINT    shift, and go to state 116
    STR      shift, and go to state 74
    '{'      shift, and go to state 80
    '('      shift, and go to state 120
    ';'      shift, and go to state 187
    '+'      shift, and go to state 122
    '-'      shift, and go to state 123

    compound    go to state 207
    generic_id  go to state 125
    const_expr  go to state 126
    simple      go to state 208
    expr        go to state 128
    term        go to state 129
    factor      go to state 130
    PrefixOp    go to state 131
    call        go to state 141


State 207

  100 loop: FOR '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' compound .

    $default  reduce using rule 100 (loop)


State 208

   99 loop: FOR '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' simple .

    $default  reduce using rule 99 (loop)
