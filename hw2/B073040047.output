Terminals unused in grammar

    STR


Rules useless in parser due to conflicts

   18 $@4: %empty


State 6 conflicts: 1 shift/reduce
State 9 conflicts: 5 reduce/reduce
State 40 conflicts: 2 shift/reduce
State 48 conflicts: 1 shift/reduce
State 59 conflicts: 15 shift/reduce
State 60 conflicts: 15 shift/reduce
State 66 conflicts: 1 shift/reduce
State 86 conflicts: 7 reduce/reduce
State 103 conflicts: 2 shift/reduce
State 121 conflicts: 2 shift/reduce
State 126 conflicts: 1 shift/reduce
State 181 conflicts: 8 shift/reduce
State 182 conflicts: 8 shift/reduce


Grammar

    0 $accept: classes $end

    1 classes: %empty
    2        | classes class

    3 $@1: %empty

    4 class: CLASS ID '{' $@1 fields methods '}'
    5      | CLASS ID '{' '}'

    6 fields: %empty
    7       | fields declarations

    8 methods: %empty
    9        | methods type ID '(' id_list_star ')' compound
   10        | methods MAIN '(' id_list_star ')' compound

   11 id_list_star: %empty
   12             | id_list

   13 compound: '{' '}'

   14 $@2: %empty

   15 compound: '{' $@2 declarations '}'

   16 $@3: %empty

   17 compound: '{' $@3 statement '}'

   18 $@4: %empty

   19 compound: '{' $@4 declarations statement '}'

   20 declarations: specifier type id_list ';'
   21             | specifier type id_list_init ';'
   22             | FINAL type id_list_init ';'
   23             | specifier arr_type arr_init ';'

   24 specifier: %empty
   25          | STATIC

   26 id_list: ID
   27        | id_list ',' ID
   28        | id_list_init
   29        | id_list ',' id_list_init

   30 id_list_init: ID '=' const_expr
   31             | id_list_init ',' ID '=' const_expr

   32 type: INT
   33     | FLOAT
   34     | CHAR
   35     | BOOLEAN
   36     | VOID

   37 const_expr: INT_L
   38           | FLOAT_L
   39           | INT_L Infixop INT_L
   40           | INT_L Infixop FLOAT_L
   41           | FLOAT_L Infixop INT_L
   42           | FLOAT_L Infixop FLOAT_L

   43 Infixop: '+'
   44        | '-'
   45        | '*'
   46        | '/'
   47        | '%'
   48        | '>'
   49        | '<'
   50        | '&'
   51        | '|'
   52        | LE
   53        | GE
   54        | EQ
   55        | NE
   56        | AND
   57        | OR

   58 arr_type: INT '[' ']'
   59         | FLOAT '[' ']'
   60         | CHAR '[' ']'
   61         | BOOLEAN '[' ']'

   62 arr_init: '=' NEW type '[' INT_L ']'

   63 statement: compound
   64          | simple ';'
   65          | conditional ';'
   66          | loop ';'
   67          | return ';'
   68          | call ';'
   69          | ';'

   70 simple: name '=' expr ';'
   71       | PRINT '(' expr ')' ';'
   72       | name PP ';'
   73       | name MM ';'
   74       | expr ';'
   75       | ';'

   76 name: ID
   77     | name '.' ID

   78 expr: term
   79     | expr '+' term
   80     | expr '-' term

   81 term: factor
   82     | factor '*' factor
   83     | factor '/' factor

   84 factor: ID
   85       | const_expr
   86       | '(' expr ')'
   87       | PrefixOp ID
   88       | ID PostfixOp
   89       | call

   90 PrefixOp: PP
   91         | MM
   92         | '+'
   93         | '-'

   94 PostfixOp: PP
   95          | MM

   96 conditional: IF '(' bool_expr ')' simple ELSE simple
   97            | IF '(' bool_expr ')' compound ELSE simple
   98            | IF '(' bool_expr ')' compound ELSE compound
   99            | IF '(' bool_expr ')' simple ELSE compound

  100 bool_expr: expr Infixop expr

  101 loop: WHILE '(' bool_expr ')' simple
  102     | WHILE '(' bool_expr ')' compound
  103     | FOR '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' simple
  104     | FOR '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' compound

  105 ForInitOpt: %empty
  106           | id_list_init
  107           | INT id_list_init

  108 ForUpdateOpt: %empty
  109             | ID PP
  110             | ID MM

  111 return: RETURN expr ';'

  112 call: name '(' expr_list ')' ';'

  113 expr_list: expr
  114          | expr ',' expr_list


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 47
    '&' (38) 50
    '(' (40) 9 10 71 86 96 97 98 99 101 102 103 104 112
    ')' (41) 9 10 71 86 96 97 98 99 101 102 103 104 112
    '*' (42) 45 82
    '+' (43) 43 79 92
    ',' (44) 27 29 31 114
    '-' (45) 44 80 93
    '.' (46) 77
    '/' (47) 46 83
    ';' (59) 20 21 22 23 64 65 66 67 68 69 70 71 72 73 74 75 103 104 111 112
    '<' (60) 49
    '=' (61) 30 31 62 70
    '>' (62) 48
    '[' (91) 58 59 60 61 62
    ']' (93) 58 59 60 61 62
    '{' (123) 4 5 13 15 17 19
    '|' (124) 51
    '}' (125) 4 5 13 15 17 19
    error (256)
    AND (258) 56
    BOOLEAN (259) 35 61
    CHAR (260) 34 60
    CLASS (261) 4 5
    ELSE (262) 96 97 98 99
    EQ (263) 54
    FINAL (264) 22
    FLOAT (265) 33 59
    FOR (266) 103 104
    GE (267) 53
    ID (268) 4 5 9 26 27 30 31 76 77 84 87 88 109 110
    IF (269) 96 97 98 99
    INT (270) 32 58 107
    LE (271) 52
    MAIN (272) 10
    MM (273) 73 91 95 110
    NE (274) 55
    NEW (275) 62
    INT_L (276) 37 39 40 41 62
    FLOAT_L (277) 38 40 41 42
    OR (278) 57
    PP (279) 72 90 94 109
    PRINT (280) 71
    RETURN (281) 111
    STATIC (282) 25
    STR (283)
    VOID (284) 36
    WHILE (285) 101 102


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    classes (51)
        on left: 1 2
        on right: 0 2
    class (52)
        on left: 4 5
        on right: 2
    $@1 (53)
        on left: 3
        on right: 4
    fields (54)
        on left: 6 7
        on right: 4 7
    methods (55)
        on left: 8 9 10
        on right: 4 9 10
    id_list_star (56)
        on left: 11 12
        on right: 9 10
    compound (57)
        on left: 13 15 17 19
        on right: 9 10 63 97 98 99 102 104
    $@2 (58)
        on left: 14
        on right: 15
    $@3 (59)
        on left: 16
        on right: 17
    $@4 (60)
        on left: 18
        on right: 19
    declarations (61)
        on left: 20 21 22 23
        on right: 7 15 19
    specifier (62)
        on left: 24 25
        on right: 20 21 23
    id_list (63)
        on left: 26 27 28 29
        on right: 12 20 27 29
    id_list_init (64)
        on left: 30 31
        on right: 21 22 28 29 31 106 107
    type (65)
        on left: 32 33 34 35 36
        on right: 9 20 21 22 62
    const_expr (66)
        on left: 37 38 39 40 41 42
        on right: 30 31 85
    Infixop (67)
        on left: 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57
        on right: 39 40 41 42 100
    arr_type (68)
        on left: 58 59 60 61
        on right: 23
    arr_init (69)
        on left: 62
        on right: 23
    statement (70)
        on left: 63 64 65 66 67 68 69
        on right: 17 19
    simple (71)
        on left: 70 71 72 73 74 75
        on right: 64 96 97 99 101 103
    name (72)
        on left: 76 77
        on right: 70 72 73 77 112
    expr (73)
        on left: 78 79 80
        on right: 70 71 74 79 80 86 100 111 113 114
    term (74)
        on left: 81 82 83
        on right: 78 79 80
    factor (75)
        on left: 84 85 86 87 88 89
        on right: 81 82 83
    PrefixOp (76)
        on left: 90 91 92 93
        on right: 87
    PostfixOp (77)
        on left: 94 95
        on right: 88
    conditional (78)
        on left: 96 97 98 99
        on right: 65
    bool_expr (79)
        on left: 100
        on right: 96 97 98 99 101 102 103 104
    loop (80)
        on left: 101 102 103 104
        on right: 66
    ForInitOpt (81)
        on left: 105 106 107
        on right: 103 104
    ForUpdateOpt (82)
        on left: 108 109 110
        on right: 103 104
    return (83)
        on left: 111
        on right: 67
    call (84)
        on left: 112
        on right: 68 89
    expr_list (85)
        on left: 113 114
        on right: 112 114


State 0

    0 $accept: . classes $end

    $default  reduce using rule 1 (classes)

    classes  go to state 1


State 1

    0 $accept: classes . $end
    2 classes: classes . class

    $end   shift, and go to state 2
    CLASS  shift, and go to state 3

    class  go to state 4


State 2

    0 $accept: classes $end .

    $default  accept


State 3

    4 class: CLASS . ID '{' $@1 fields methods '}'
    5      | CLASS . ID '{' '}'

    ID  shift, and go to state 5


State 4

    2 classes: classes class .

    $default  reduce using rule 2 (classes)


State 5

    4 class: CLASS ID . '{' $@1 fields methods '}'
    5      | CLASS ID . '{' '}'

    '{'  shift, and go to state 6


State 6

    4 class: CLASS ID '{' . $@1 fields methods '}'
    5      | CLASS ID '{' . '}'

    '}'  shift, and go to state 7

    '}'       [reduce using rule 3 ($@1)]
    $default  reduce using rule 3 ($@1)

    $@1  go to state 8


State 7

    5 class: CLASS ID '{' '}' .

    $default  reduce using rule 5 (class)


State 8

    4 class: CLASS ID '{' $@1 . fields methods '}'

    $default  reduce using rule 6 (fields)

    fields  go to state 9


State 9

    4 class: CLASS ID '{' $@1 fields . methods '}'
    7 fields: fields . declarations

    FINAL   shift, and go to state 10
    STATIC  shift, and go to state 11

    BOOLEAN   reduce using rule 8 (methods)
    BOOLEAN   [reduce using rule 24 (specifier)]
    CHAR      reduce using rule 8 (methods)
    CHAR      [reduce using rule 24 (specifier)]
    FLOAT     reduce using rule 8 (methods)
    FLOAT     [reduce using rule 24 (specifier)]
    INT       reduce using rule 8 (methods)
    INT       [reduce using rule 24 (specifier)]
    VOID      reduce using rule 8 (methods)
    VOID      [reduce using rule 24 (specifier)]
    $default  reduce using rule 8 (methods)

    methods       go to state 12
    declarations  go to state 13
    specifier     go to state 14


State 10

   22 declarations: FINAL . type id_list_init ';'

    BOOLEAN  shift, and go to state 15
    CHAR     shift, and go to state 16
    FLOAT    shift, and go to state 17
    INT      shift, and go to state 18
    VOID     shift, and go to state 19

    type  go to state 20


State 11

   25 specifier: STATIC .

    $default  reduce using rule 25 (specifier)


State 12

    4 class: CLASS ID '{' $@1 fields methods . '}'
    9 methods: methods . type ID '(' id_list_star ')' compound
   10        | methods . MAIN '(' id_list_star ')' compound

    BOOLEAN  shift, and go to state 15
    CHAR     shift, and go to state 16
    FLOAT    shift, and go to state 17
    INT      shift, and go to state 18
    MAIN     shift, and go to state 21
    VOID     shift, and go to state 19
    '}'      shift, and go to state 22

    type  go to state 23


State 13

    7 fields: fields declarations .

    $default  reduce using rule 7 (fields)


State 14

   20 declarations: specifier . type id_list ';'
   21             | specifier . type id_list_init ';'
   23             | specifier . arr_type arr_init ';'

    BOOLEAN  shift, and go to state 24
    CHAR     shift, and go to state 25
    FLOAT    shift, and go to state 26
    INT      shift, and go to state 27
    VOID     shift, and go to state 19

    type      go to state 28
    arr_type  go to state 29


State 15

   35 type: BOOLEAN .

    $default  reduce using rule 35 (type)


State 16

   34 type: CHAR .

    $default  reduce using rule 34 (type)


State 17

   33 type: FLOAT .

    $default  reduce using rule 33 (type)


State 18

   32 type: INT .

    $default  reduce using rule 32 (type)


State 19

   36 type: VOID .

    $default  reduce using rule 36 (type)


State 20

   22 declarations: FINAL type . id_list_init ';'

    ID  shift, and go to state 30

    id_list_init  go to state 31


State 21

   10 methods: methods MAIN . '(' id_list_star ')' compound

    '('  shift, and go to state 32


State 22

    4 class: CLASS ID '{' $@1 fields methods '}' .

    $default  reduce using rule 4 (class)


State 23

    9 methods: methods type . ID '(' id_list_star ')' compound

    ID  shift, and go to state 33


State 24

   35 type: BOOLEAN .
   61 arr_type: BOOLEAN . '[' ']'

    '['  shift, and go to state 34

    $default  reduce using rule 35 (type)


State 25

   34 type: CHAR .
   60 arr_type: CHAR . '[' ']'

    '['  shift, and go to state 35

    $default  reduce using rule 34 (type)


State 26

   33 type: FLOAT .
   59 arr_type: FLOAT . '[' ']'

    '['  shift, and go to state 36

    $default  reduce using rule 33 (type)


State 27

   32 type: INT .
   58 arr_type: INT . '[' ']'

    '['  shift, and go to state 37

    $default  reduce using rule 32 (type)


State 28

   20 declarations: specifier type . id_list ';'
   21             | specifier type . id_list_init ';'

    ID  shift, and go to state 38

    id_list       go to state 39
    id_list_init  go to state 40


State 29

   23 declarations: specifier arr_type . arr_init ';'

    '='  shift, and go to state 41

    arr_init  go to state 42


State 30

   30 id_list_init: ID . '=' const_expr

    '='  shift, and go to state 43


State 31

   22 declarations: FINAL type id_list_init . ';'
   31 id_list_init: id_list_init . ',' ID '=' const_expr

    ';'  shift, and go to state 44
    ','  shift, and go to state 45


State 32

   10 methods: methods MAIN '(' . id_list_star ')' compound

    ID  shift, and go to state 38

    $default  reduce using rule 11 (id_list_star)

    id_list_star  go to state 46
    id_list       go to state 47
    id_list_init  go to state 48


State 33

    9 methods: methods type ID . '(' id_list_star ')' compound

    '('  shift, and go to state 49


State 34

   61 arr_type: BOOLEAN '[' . ']'

    ']'  shift, and go to state 50


State 35

   60 arr_type: CHAR '[' . ']'

    ']'  shift, and go to state 51


State 36

   59 arr_type: FLOAT '[' . ']'

    ']'  shift, and go to state 52


State 37

   58 arr_type: INT '[' . ']'

    ']'  shift, and go to state 53


State 38

   26 id_list: ID .
   30 id_list_init: ID . '=' const_expr

    '='  shift, and go to state 43

    $default  reduce using rule 26 (id_list)


State 39

   20 declarations: specifier type id_list . ';'
   27 id_list: id_list . ',' ID
   29        | id_list . ',' id_list_init

    ';'  shift, and go to state 54
    ','  shift, and go to state 55


State 40

   21 declarations: specifier type id_list_init . ';'
   28 id_list: id_list_init .
   31 id_list_init: id_list_init . ',' ID '=' const_expr

    ';'  shift, and go to state 56
    ','  shift, and go to state 45

    ';'  [reduce using rule 28 (id_list)]
    ','  [reduce using rule 28 (id_list)]


State 41

   62 arr_init: '=' . NEW type '[' INT_L ']'

    NEW  shift, and go to state 57


State 42

   23 declarations: specifier arr_type arr_init . ';'

    ';'  shift, and go to state 58


State 43

   30 id_list_init: ID '=' . const_expr

    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60

    const_expr  go to state 61


State 44

   22 declarations: FINAL type id_list_init ';' .

    $default  reduce using rule 22 (declarations)


State 45

   31 id_list_init: id_list_init ',' . ID '=' const_expr

    ID  shift, and go to state 62


State 46

   10 methods: methods MAIN '(' id_list_star . ')' compound

    ')'  shift, and go to state 63


State 47

   12 id_list_star: id_list .
   27 id_list: id_list . ',' ID
   29        | id_list . ',' id_list_init

    ','  shift, and go to state 55

    $default  reduce using rule 12 (id_list_star)


State 48

   28 id_list: id_list_init .
   31 id_list_init: id_list_init . ',' ID '=' const_expr

    ','  shift, and go to state 45

    ','       [reduce using rule 28 (id_list)]
    $default  reduce using rule 28 (id_list)


State 49

    9 methods: methods type ID '(' . id_list_star ')' compound

    ID  shift, and go to state 38

    $default  reduce using rule 11 (id_list_star)

    id_list_star  go to state 64
    id_list       go to state 47
    id_list_init  go to state 48


State 50

   61 arr_type: BOOLEAN '[' ']' .

    $default  reduce using rule 61 (arr_type)


State 51

   60 arr_type: CHAR '[' ']' .

    $default  reduce using rule 60 (arr_type)


State 52

   59 arr_type: FLOAT '[' ']' .

    $default  reduce using rule 59 (arr_type)


State 53

   58 arr_type: INT '[' ']' .

    $default  reduce using rule 58 (arr_type)


State 54

   20 declarations: specifier type id_list ';' .

    $default  reduce using rule 20 (declarations)


State 55

   27 id_list: id_list ',' . ID
   29        | id_list ',' . id_list_init

    ID  shift, and go to state 65

    id_list_init  go to state 66


State 56

   21 declarations: specifier type id_list_init ';' .

    $default  reduce using rule 21 (declarations)


State 57

   62 arr_init: '=' NEW . type '[' INT_L ']'

    BOOLEAN  shift, and go to state 15
    CHAR     shift, and go to state 16
    FLOAT    shift, and go to state 17
    INT      shift, and go to state 18
    VOID     shift, and go to state 19

    type  go to state 67


State 58

   23 declarations: specifier arr_type arr_init ';' .

    $default  reduce using rule 23 (declarations)


State 59

   37 const_expr: INT_L .
   39           | INT_L . Infixop INT_L
   40           | INT_L . Infixop FLOAT_L

    AND  shift, and go to state 68
    EQ   shift, and go to state 69
    GE   shift, and go to state 70
    LE   shift, and go to state 71
    NE   shift, and go to state 72
    OR   shift, and go to state 73
    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '*'  shift, and go to state 76
    '/'  shift, and go to state 77
    '%'  shift, and go to state 78
    '>'  shift, and go to state 79
    '<'  shift, and go to state 80
    '&'  shift, and go to state 81
    '|'  shift, and go to state 82

    AND       [reduce using rule 37 (const_expr)]
    EQ        [reduce using rule 37 (const_expr)]
    GE        [reduce using rule 37 (const_expr)]
    LE        [reduce using rule 37 (const_expr)]
    NE        [reduce using rule 37 (const_expr)]
    OR        [reduce using rule 37 (const_expr)]
    '+'       [reduce using rule 37 (const_expr)]
    '-'       [reduce using rule 37 (const_expr)]
    '*'       [reduce using rule 37 (const_expr)]
    '/'       [reduce using rule 37 (const_expr)]
    '%'       [reduce using rule 37 (const_expr)]
    '>'       [reduce using rule 37 (const_expr)]
    '<'       [reduce using rule 37 (const_expr)]
    '&'       [reduce using rule 37 (const_expr)]
    '|'       [reduce using rule 37 (const_expr)]
    $default  reduce using rule 37 (const_expr)

    Infixop  go to state 83


State 60

   38 const_expr: FLOAT_L .
   41           | FLOAT_L . Infixop INT_L
   42           | FLOAT_L . Infixop FLOAT_L

    AND  shift, and go to state 68
    EQ   shift, and go to state 69
    GE   shift, and go to state 70
    LE   shift, and go to state 71
    NE   shift, and go to state 72
    OR   shift, and go to state 73
    '+'  shift, and go to state 74
    '-'  shift, and go to state 75
    '*'  shift, and go to state 76
    '/'  shift, and go to state 77
    '%'  shift, and go to state 78
    '>'  shift, and go to state 79
    '<'  shift, and go to state 80
    '&'  shift, and go to state 81
    '|'  shift, and go to state 82

    AND       [reduce using rule 38 (const_expr)]
    EQ        [reduce using rule 38 (const_expr)]
    GE        [reduce using rule 38 (const_expr)]
    LE        [reduce using rule 38 (const_expr)]
    NE        [reduce using rule 38 (const_expr)]
    OR        [reduce using rule 38 (const_expr)]
    '+'       [reduce using rule 38 (const_expr)]
    '-'       [reduce using rule 38 (const_expr)]
    '*'       [reduce using rule 38 (const_expr)]
    '/'       [reduce using rule 38 (const_expr)]
    '%'       [reduce using rule 38 (const_expr)]
    '>'       [reduce using rule 38 (const_expr)]
    '<'       [reduce using rule 38 (const_expr)]
    '&'       [reduce using rule 38 (const_expr)]
    '|'       [reduce using rule 38 (const_expr)]
    $default  reduce using rule 38 (const_expr)

    Infixop  go to state 84


State 61

   30 id_list_init: ID '=' const_expr .

    $default  reduce using rule 30 (id_list_init)


State 62

   31 id_list_init: id_list_init ',' ID . '=' const_expr

    '='  shift, and go to state 85


State 63

   10 methods: methods MAIN '(' id_list_star ')' . compound

    '{'  shift, and go to state 86

    compound  go to state 87


State 64

    9 methods: methods type ID '(' id_list_star . ')' compound

    ')'  shift, and go to state 88


State 65

   27 id_list: id_list ',' ID .
   30 id_list_init: ID . '=' const_expr

    '='  shift, and go to state 43

    $default  reduce using rule 27 (id_list)


State 66

   29 id_list: id_list ',' id_list_init .
   31 id_list_init: id_list_init . ',' ID '=' const_expr

    ','  shift, and go to state 45

    ','       [reduce using rule 29 (id_list)]
    $default  reduce using rule 29 (id_list)


State 67

   62 arr_init: '=' NEW type . '[' INT_L ']'

    '['  shift, and go to state 89


State 68

   56 Infixop: AND .

    $default  reduce using rule 56 (Infixop)


State 69

   54 Infixop: EQ .

    $default  reduce using rule 54 (Infixop)


State 70

   53 Infixop: GE .

    $default  reduce using rule 53 (Infixop)


State 71

   52 Infixop: LE .

    $default  reduce using rule 52 (Infixop)


State 72

   55 Infixop: NE .

    $default  reduce using rule 55 (Infixop)


State 73

   57 Infixop: OR .

    $default  reduce using rule 57 (Infixop)


State 74

   43 Infixop: '+' .

    $default  reduce using rule 43 (Infixop)


State 75

   44 Infixop: '-' .

    $default  reduce using rule 44 (Infixop)


State 76

   45 Infixop: '*' .

    $default  reduce using rule 45 (Infixop)


State 77

   46 Infixop: '/' .

    $default  reduce using rule 46 (Infixop)


State 78

   47 Infixop: '%' .

    $default  reduce using rule 47 (Infixop)


State 79

   48 Infixop: '>' .

    $default  reduce using rule 48 (Infixop)


State 80

   49 Infixop: '<' .

    $default  reduce using rule 49 (Infixop)


State 81

   50 Infixop: '&' .

    $default  reduce using rule 50 (Infixop)


State 82

   51 Infixop: '|' .

    $default  reduce using rule 51 (Infixop)


State 83

   39 const_expr: INT_L Infixop . INT_L
   40           | INT_L Infixop . FLOAT_L

    INT_L    shift, and go to state 90
    FLOAT_L  shift, and go to state 91


State 84

   41 const_expr: FLOAT_L Infixop . INT_L
   42           | FLOAT_L Infixop . FLOAT_L

    INT_L    shift, and go to state 92
    FLOAT_L  shift, and go to state 93


State 85

   31 id_list_init: id_list_init ',' ID '=' . const_expr

    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60

    const_expr  go to state 94


State 86

   13 compound: '{' . '}'
   15         | '{' . $@2 declarations '}'
   17         | '{' . $@3 statement '}'
   19         | '{' . $@4 declarations statement '}'

    '}'  shift, and go to state 95

    BOOLEAN   reduce using rule 14 ($@2)
    BOOLEAN   [reduce using rule 18 ($@4)]
    CHAR      reduce using rule 14 ($@2)
    CHAR      [reduce using rule 18 ($@4)]
    FINAL     reduce using rule 14 ($@2)
    FINAL     [reduce using rule 18 ($@4)]
    FLOAT     reduce using rule 14 ($@2)
    FLOAT     [reduce using rule 18 ($@4)]
    INT       reduce using rule 14 ($@2)
    INT       [reduce using rule 18 ($@4)]
    STATIC    reduce using rule 14 ($@2)
    STATIC    [reduce using rule 18 ($@4)]
    VOID      reduce using rule 14 ($@2)
    VOID      [reduce using rule 18 ($@4)]
    $default  reduce using rule 16 ($@3)

    $@2  go to state 96
    $@3  go to state 97
    $@4  go to state 98


State 87

   10 methods: methods MAIN '(' id_list_star ')' compound .

    $default  reduce using rule 10 (methods)


State 88

    9 methods: methods type ID '(' id_list_star ')' . compound

    '{'  shift, and go to state 86

    compound  go to state 99


State 89

   62 arr_init: '=' NEW type '[' . INT_L ']'

    INT_L  shift, and go to state 100


State 90

   39 const_expr: INT_L Infixop INT_L .

    $default  reduce using rule 39 (const_expr)


State 91

   40 const_expr: INT_L Infixop FLOAT_L .

    $default  reduce using rule 40 (const_expr)


State 92

   41 const_expr: FLOAT_L Infixop INT_L .

    $default  reduce using rule 41 (const_expr)


State 93

   42 const_expr: FLOAT_L Infixop FLOAT_L .

    $default  reduce using rule 42 (const_expr)


State 94

   31 id_list_init: id_list_init ',' ID '=' const_expr .

    $default  reduce using rule 31 (id_list_init)


State 95

   13 compound: '{' '}' .

    $default  reduce using rule 13 (compound)


State 96

   15 compound: '{' $@2 . declarations '}'

    FINAL   shift, and go to state 10
    STATIC  shift, and go to state 11

    $default  reduce using rule 24 (specifier)

    declarations  go to state 101
    specifier     go to state 14


State 97

   17 compound: '{' $@3 . statement '}'

    FOR      shift, and go to state 102
    ID       shift, and go to state 103
    IF       shift, and go to state 104
    MM       shift, and go to state 105
    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60
    PP       shift, and go to state 106
    PRINT    shift, and go to state 107
    RETURN   shift, and go to state 108
    WHILE    shift, and go to state 109
    '{'      shift, and go to state 86
    '('      shift, and go to state 110
    ';'      shift, and go to state 111
    '+'      shift, and go to state 112
    '-'      shift, and go to state 113

    compound     go to state 114
    const_expr   go to state 115
    statement    go to state 116
    simple       go to state 117
    name         go to state 118
    expr         go to state 119
    term         go to state 120
    factor       go to state 121
    PrefixOp     go to state 122
    conditional  go to state 123
    loop         go to state 124
    return       go to state 125
    call         go to state 126


State 98

   19 compound: '{' $@4 . declarations statement '}'

    FINAL   shift, and go to state 10
    STATIC  shift, and go to state 11

    $default  reduce using rule 24 (specifier)

    declarations  go to state 127
    specifier     go to state 14


State 99

    9 methods: methods type ID '(' id_list_star ')' compound .

    $default  reduce using rule 9 (methods)


State 100

   62 arr_init: '=' NEW type '[' INT_L . ']'

    ']'  shift, and go to state 128


State 101

   15 compound: '{' $@2 declarations . '}'

    '}'  shift, and go to state 129


State 102

  103 loop: FOR . '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' simple
  104     | FOR . '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' compound

    '('  shift, and go to state 130


State 103

   76 name: ID .
   84 factor: ID .
   88       | ID . PostfixOp

    MM  shift, and go to state 131
    PP  shift, and go to state 132

    MM        [reduce using rule 76 (name)]
    PP        [reduce using rule 76 (name)]
    '('       reduce using rule 76 (name)
    '='       reduce using rule 76 (name)
    '.'       reduce using rule 76 (name)
    $default  reduce using rule 84 (factor)

    PostfixOp  go to state 133


State 104

   96 conditional: IF . '(' bool_expr ')' simple ELSE simple
   97            | IF . '(' bool_expr ')' compound ELSE simple
   98            | IF . '(' bool_expr ')' compound ELSE compound
   99            | IF . '(' bool_expr ')' simple ELSE compound

    '('  shift, and go to state 134


State 105

   91 PrefixOp: MM .

    $default  reduce using rule 91 (PrefixOp)


State 106

   90 PrefixOp: PP .

    $default  reduce using rule 90 (PrefixOp)


State 107

   71 simple: PRINT . '(' expr ')' ';'

    '('  shift, and go to state 135


State 108

  111 return: RETURN . expr ';'

    ID       shift, and go to state 103
    MM       shift, and go to state 105
    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60
    PP       shift, and go to state 106
    '('      shift, and go to state 110
    '+'      shift, and go to state 112
    '-'      shift, and go to state 113

    const_expr  go to state 115
    name        go to state 136
    expr        go to state 137
    term        go to state 120
    factor      go to state 121
    PrefixOp    go to state 122
    call        go to state 138


State 109

  101 loop: WHILE . '(' bool_expr ')' simple
  102     | WHILE . '(' bool_expr ')' compound

    '('  shift, and go to state 139


State 110

   86 factor: '(' . expr ')'

    ID       shift, and go to state 103
    MM       shift, and go to state 105
    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60
    PP       shift, and go to state 106
    '('      shift, and go to state 110
    '+'      shift, and go to state 112
    '-'      shift, and go to state 113

    const_expr  go to state 115
    name        go to state 136
    expr        go to state 140
    term        go to state 120
    factor      go to state 121
    PrefixOp    go to state 122
    call        go to state 138


State 111

   69 statement: ';' .
   75 simple: ';' .

    ';'       reduce using rule 75 (simple)
    $default  reduce using rule 69 (statement)


State 112

   92 PrefixOp: '+' .

    $default  reduce using rule 92 (PrefixOp)


State 113

   93 PrefixOp: '-' .

    $default  reduce using rule 93 (PrefixOp)


State 114

   63 statement: compound .

    $default  reduce using rule 63 (statement)


State 115

   85 factor: const_expr .

    $default  reduce using rule 85 (factor)


State 116

   17 compound: '{' $@3 statement . '}'

    '}'  shift, and go to state 141


State 117

   64 statement: simple . ';'

    ';'  shift, and go to state 142


State 118

   70 simple: name . '=' expr ';'
   72       | name . PP ';'
   73       | name . MM ';'
   77 name: name . '.' ID
  112 call: name . '(' expr_list ')' ';'

    MM   shift, and go to state 143
    PP   shift, and go to state 144
    '('  shift, and go to state 145
    '='  shift, and go to state 146
    '.'  shift, and go to state 147


State 119

   74 simple: expr . ';'
   79 expr: expr . '+' term
   80     | expr . '-' term

    ';'  shift, and go to state 148
    '+'  shift, and go to state 149
    '-'  shift, and go to state 150


State 120

   78 expr: term .

    $default  reduce using rule 78 (expr)


State 121

   81 term: factor .
   82     | factor . '*' factor
   83     | factor . '/' factor

    '*'  shift, and go to state 151
    '/'  shift, and go to state 152

    '*'       [reduce using rule 81 (term)]
    '/'       [reduce using rule 81 (term)]
    $default  reduce using rule 81 (term)


State 122

   87 factor: PrefixOp . ID

    ID  shift, and go to state 153


State 123

   65 statement: conditional . ';'

    ';'  shift, and go to state 154


State 124

   66 statement: loop . ';'

    ';'  shift, and go to state 155


State 125

   67 statement: return . ';'

    ';'  shift, and go to state 156


State 126

   68 statement: call . ';'
   89 factor: call .

    ';'  shift, and go to state 157

    ';'       [reduce using rule 89 (factor)]
    $default  reduce using rule 89 (factor)


State 127

   19 compound: '{' $@4 declarations . statement '}'

    FOR      shift, and go to state 102
    ID       shift, and go to state 103
    IF       shift, and go to state 104
    MM       shift, and go to state 105
    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60
    PP       shift, and go to state 106
    PRINT    shift, and go to state 107
    RETURN   shift, and go to state 108
    WHILE    shift, and go to state 109
    '{'      shift, and go to state 86
    '('      shift, and go to state 110
    ';'      shift, and go to state 111
    '+'      shift, and go to state 112
    '-'      shift, and go to state 113

    compound     go to state 114
    const_expr   go to state 115
    statement    go to state 158
    simple       go to state 117
    name         go to state 118
    expr         go to state 119
    term         go to state 120
    factor       go to state 121
    PrefixOp     go to state 122
    conditional  go to state 123
    loop         go to state 124
    return       go to state 125
    call         go to state 126


State 128

   62 arr_init: '=' NEW type '[' INT_L ']' .

    $default  reduce using rule 62 (arr_init)


State 129

   15 compound: '{' $@2 declarations '}' .

    $default  reduce using rule 15 (compound)


State 130

  103 loop: FOR '(' . ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' simple
  104     | FOR '(' . ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' compound

    ID   shift, and go to state 30
    INT  shift, and go to state 159

    $default  reduce using rule 105 (ForInitOpt)

    id_list_init  go to state 160
    ForInitOpt    go to state 161


State 131

   95 PostfixOp: MM .

    $default  reduce using rule 95 (PostfixOp)


State 132

   94 PostfixOp: PP .

    $default  reduce using rule 94 (PostfixOp)


State 133

   88 factor: ID PostfixOp .

    $default  reduce using rule 88 (factor)


State 134

   96 conditional: IF '(' . bool_expr ')' simple ELSE simple
   97            | IF '(' . bool_expr ')' compound ELSE simple
   98            | IF '(' . bool_expr ')' compound ELSE compound
   99            | IF '(' . bool_expr ')' simple ELSE compound

    ID       shift, and go to state 103
    MM       shift, and go to state 105
    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60
    PP       shift, and go to state 106
    '('      shift, and go to state 110
    '+'      shift, and go to state 112
    '-'      shift, and go to state 113

    const_expr  go to state 115
    name        go to state 136
    expr        go to state 162
    term        go to state 120
    factor      go to state 121
    PrefixOp    go to state 122
    bool_expr   go to state 163
    call        go to state 138


State 135

   71 simple: PRINT '(' . expr ')' ';'

    ID       shift, and go to state 103
    MM       shift, and go to state 105
    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60
    PP       shift, and go to state 106
    '('      shift, and go to state 110
    '+'      shift, and go to state 112
    '-'      shift, and go to state 113

    const_expr  go to state 115
    name        go to state 136
    expr        go to state 164
    term        go to state 120
    factor      go to state 121
    PrefixOp    go to state 122
    call        go to state 138


State 136

   77 name: name . '.' ID
  112 call: name . '(' expr_list ')' ';'

    '('  shift, and go to state 145
    '.'  shift, and go to state 147


State 137

   79 expr: expr . '+' term
   80     | expr . '-' term
  111 return: RETURN expr . ';'

    ';'  shift, and go to state 165
    '+'  shift, and go to state 149
    '-'  shift, and go to state 150


State 138

   89 factor: call .

    $default  reduce using rule 89 (factor)


State 139

  101 loop: WHILE '(' . bool_expr ')' simple
  102     | WHILE '(' . bool_expr ')' compound

    ID       shift, and go to state 103
    MM       shift, and go to state 105
    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60
    PP       shift, and go to state 106
    '('      shift, and go to state 110
    '+'      shift, and go to state 112
    '-'      shift, and go to state 113

    const_expr  go to state 115
    name        go to state 136
    expr        go to state 162
    term        go to state 120
    factor      go to state 121
    PrefixOp    go to state 122
    bool_expr   go to state 166
    call        go to state 138


State 140

   79 expr: expr . '+' term
   80     | expr . '-' term
   86 factor: '(' expr . ')'

    ')'  shift, and go to state 167
    '+'  shift, and go to state 149
    '-'  shift, and go to state 150


State 141

   17 compound: '{' $@3 statement '}' .

    $default  reduce using rule 17 (compound)


State 142

   64 statement: simple ';' .

    $default  reduce using rule 64 (statement)


State 143

   73 simple: name MM . ';'

    ';'  shift, and go to state 168


State 144

   72 simple: name PP . ';'

    ';'  shift, and go to state 169


State 145

  112 call: name '(' . expr_list ')' ';'

    ID       shift, and go to state 103
    MM       shift, and go to state 105
    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60
    PP       shift, and go to state 106
    '('      shift, and go to state 110
    '+'      shift, and go to state 112
    '-'      shift, and go to state 113

    const_expr  go to state 115
    name        go to state 136
    expr        go to state 170
    term        go to state 120
    factor      go to state 121
    PrefixOp    go to state 122
    call        go to state 138
    expr_list   go to state 171


State 146

   70 simple: name '=' . expr ';'

    ID       shift, and go to state 103
    MM       shift, and go to state 105
    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60
    PP       shift, and go to state 106
    '('      shift, and go to state 110
    '+'      shift, and go to state 112
    '-'      shift, and go to state 113

    const_expr  go to state 115
    name        go to state 136
    expr        go to state 172
    term        go to state 120
    factor      go to state 121
    PrefixOp    go to state 122
    call        go to state 138


State 147

   77 name: name '.' . ID

    ID  shift, and go to state 173


State 148

   74 simple: expr ';' .

    $default  reduce using rule 74 (simple)


State 149

   79 expr: expr '+' . term

    ID       shift, and go to state 103
    MM       shift, and go to state 105
    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60
    PP       shift, and go to state 106
    '('      shift, and go to state 110
    '+'      shift, and go to state 112
    '-'      shift, and go to state 113

    const_expr  go to state 115
    name        go to state 136
    term        go to state 174
    factor      go to state 121
    PrefixOp    go to state 122
    call        go to state 138


State 150

   80 expr: expr '-' . term

    ID       shift, and go to state 103
    MM       shift, and go to state 105
    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60
    PP       shift, and go to state 106
    '('      shift, and go to state 110
    '+'      shift, and go to state 112
    '-'      shift, and go to state 113

    const_expr  go to state 115
    name        go to state 136
    term        go to state 175
    factor      go to state 121
    PrefixOp    go to state 122
    call        go to state 138


State 151

   82 term: factor '*' . factor

    ID       shift, and go to state 103
    MM       shift, and go to state 105
    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60
    PP       shift, and go to state 106
    '('      shift, and go to state 110
    '+'      shift, and go to state 112
    '-'      shift, and go to state 113

    const_expr  go to state 115
    name        go to state 136
    factor      go to state 176
    PrefixOp    go to state 122
    call        go to state 138


State 152

   83 term: factor '/' . factor

    ID       shift, and go to state 103
    MM       shift, and go to state 105
    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60
    PP       shift, and go to state 106
    '('      shift, and go to state 110
    '+'      shift, and go to state 112
    '-'      shift, and go to state 113

    const_expr  go to state 115
    name        go to state 136
    factor      go to state 177
    PrefixOp    go to state 122
    call        go to state 138


State 153

   87 factor: PrefixOp ID .

    $default  reduce using rule 87 (factor)


State 154

   65 statement: conditional ';' .

    $default  reduce using rule 65 (statement)


State 155

   66 statement: loop ';' .

    $default  reduce using rule 66 (statement)


State 156

   67 statement: return ';' .

    $default  reduce using rule 67 (statement)


State 157

   68 statement: call ';' .

    $default  reduce using rule 68 (statement)


State 158

   19 compound: '{' $@4 declarations statement . '}'

    '}'  shift, and go to state 178


State 159

  107 ForInitOpt: INT . id_list_init

    ID  shift, and go to state 30

    id_list_init  go to state 179


State 160

   31 id_list_init: id_list_init . ',' ID '=' const_expr
  106 ForInitOpt: id_list_init .

    ','  shift, and go to state 45

    $default  reduce using rule 106 (ForInitOpt)


State 161

  103 loop: FOR '(' ForInitOpt . ';' bool_expr ';' ForUpdateOpt ')' simple
  104     | FOR '(' ForInitOpt . ';' bool_expr ';' ForUpdateOpt ')' compound

    ';'  shift, and go to state 180


State 162

   79 expr: expr . '+' term
   80     | expr . '-' term
  100 bool_expr: expr . Infixop expr

    AND  shift, and go to state 68
    EQ   shift, and go to state 69
    GE   shift, and go to state 70
    LE   shift, and go to state 71
    NE   shift, and go to state 72
    OR   shift, and go to state 73
    '+'  shift, and go to state 181
    '-'  shift, and go to state 182
    '*'  shift, and go to state 76
    '/'  shift, and go to state 77
    '%'  shift, and go to state 78
    '>'  shift, and go to state 79
    '<'  shift, and go to state 80
    '&'  shift, and go to state 81
    '|'  shift, and go to state 82

    Infixop  go to state 183


State 163

   96 conditional: IF '(' bool_expr . ')' simple ELSE simple
   97            | IF '(' bool_expr . ')' compound ELSE simple
   98            | IF '(' bool_expr . ')' compound ELSE compound
   99            | IF '(' bool_expr . ')' simple ELSE compound

    ')'  shift, and go to state 184


State 164

   71 simple: PRINT '(' expr . ')' ';'
   79 expr: expr . '+' term
   80     | expr . '-' term

    ')'  shift, and go to state 185
    '+'  shift, and go to state 149
    '-'  shift, and go to state 150


State 165

  111 return: RETURN expr ';' .

    $default  reduce using rule 111 (return)


State 166

  101 loop: WHILE '(' bool_expr . ')' simple
  102     | WHILE '(' bool_expr . ')' compound

    ')'  shift, and go to state 186


State 167

   86 factor: '(' expr ')' .

    $default  reduce using rule 86 (factor)


State 168

   73 simple: name MM ';' .

    $default  reduce using rule 73 (simple)


State 169

   72 simple: name PP ';' .

    $default  reduce using rule 72 (simple)


State 170

   79 expr: expr . '+' term
   80     | expr . '-' term
  113 expr_list: expr .
  114          | expr . ',' expr_list

    ','  shift, and go to state 187
    '+'  shift, and go to state 149
    '-'  shift, and go to state 150

    $default  reduce using rule 113 (expr_list)


State 171

  112 call: name '(' expr_list . ')' ';'

    ')'  shift, and go to state 188


State 172

   70 simple: name '=' expr . ';'
   79 expr: expr . '+' term
   80     | expr . '-' term

    ';'  shift, and go to state 189
    '+'  shift, and go to state 149
    '-'  shift, and go to state 150


State 173

   77 name: name '.' ID .

    $default  reduce using rule 77 (name)


State 174

   79 expr: expr '+' term .

    $default  reduce using rule 79 (expr)


State 175

   80 expr: expr '-' term .

    $default  reduce using rule 80 (expr)


State 176

   82 term: factor '*' factor .

    $default  reduce using rule 82 (term)


State 177

   83 term: factor '/' factor .

    $default  reduce using rule 83 (term)


State 178

   19 compound: '{' $@4 declarations statement '}' .

    $default  reduce using rule 19 (compound)


State 179

   31 id_list_init: id_list_init . ',' ID '=' const_expr
  107 ForInitOpt: INT id_list_init .

    ','  shift, and go to state 45

    $default  reduce using rule 107 (ForInitOpt)


State 180

  103 loop: FOR '(' ForInitOpt ';' . bool_expr ';' ForUpdateOpt ')' simple
  104     | FOR '(' ForInitOpt ';' . bool_expr ';' ForUpdateOpt ')' compound

    ID       shift, and go to state 103
    MM       shift, and go to state 105
    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60
    PP       shift, and go to state 106
    '('      shift, and go to state 110
    '+'      shift, and go to state 112
    '-'      shift, and go to state 113

    const_expr  go to state 115
    name        go to state 136
    expr        go to state 162
    term        go to state 120
    factor      go to state 121
    PrefixOp    go to state 122
    bool_expr   go to state 190
    call        go to state 138


State 181

   43 Infixop: '+' .
   79 expr: expr '+' . term

    ID       shift, and go to state 103
    MM       shift, and go to state 105
    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60
    PP       shift, and go to state 106
    '('      shift, and go to state 110
    '+'      shift, and go to state 112
    '-'      shift, and go to state 113

    ID       [reduce using rule 43 (Infixop)]
    MM       [reduce using rule 43 (Infixop)]
    INT_L    [reduce using rule 43 (Infixop)]
    FLOAT_L  [reduce using rule 43 (Infixop)]
    PP       [reduce using rule 43 (Infixop)]
    '('      [reduce using rule 43 (Infixop)]
    '+'      [reduce using rule 43 (Infixop)]
    '-'      [reduce using rule 43 (Infixop)]

    const_expr  go to state 115
    name        go to state 136
    term        go to state 174
    factor      go to state 121
    PrefixOp    go to state 122
    call        go to state 138


State 182

   44 Infixop: '-' .
   80 expr: expr '-' . term

    ID       shift, and go to state 103
    MM       shift, and go to state 105
    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60
    PP       shift, and go to state 106
    '('      shift, and go to state 110
    '+'      shift, and go to state 112
    '-'      shift, and go to state 113

    ID       [reduce using rule 44 (Infixop)]
    MM       [reduce using rule 44 (Infixop)]
    INT_L    [reduce using rule 44 (Infixop)]
    FLOAT_L  [reduce using rule 44 (Infixop)]
    PP       [reduce using rule 44 (Infixop)]
    '('      [reduce using rule 44 (Infixop)]
    '+'      [reduce using rule 44 (Infixop)]
    '-'      [reduce using rule 44 (Infixop)]

    const_expr  go to state 115
    name        go to state 136
    term        go to state 175
    factor      go to state 121
    PrefixOp    go to state 122
    call        go to state 138


State 183

  100 bool_expr: expr Infixop . expr

    ID       shift, and go to state 103
    MM       shift, and go to state 105
    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60
    PP       shift, and go to state 106
    '('      shift, and go to state 110
    '+'      shift, and go to state 112
    '-'      shift, and go to state 113

    const_expr  go to state 115
    name        go to state 136
    expr        go to state 191
    term        go to state 120
    factor      go to state 121
    PrefixOp    go to state 122
    call        go to state 138


State 184

   96 conditional: IF '(' bool_expr ')' . simple ELSE simple
   97            | IF '(' bool_expr ')' . compound ELSE simple
   98            | IF '(' bool_expr ')' . compound ELSE compound
   99            | IF '(' bool_expr ')' . simple ELSE compound

    ID       shift, and go to state 103
    MM       shift, and go to state 105
    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60
    PP       shift, and go to state 106
    PRINT    shift, and go to state 107
    '{'      shift, and go to state 86
    '('      shift, and go to state 110
    ';'      shift, and go to state 192
    '+'      shift, and go to state 112
    '-'      shift, and go to state 113

    compound    go to state 193
    const_expr  go to state 115
    simple      go to state 194
    name        go to state 118
    expr        go to state 119
    term        go to state 120
    factor      go to state 121
    PrefixOp    go to state 122
    call        go to state 138


State 185

   71 simple: PRINT '(' expr ')' . ';'

    ';'  shift, and go to state 195


State 186

  101 loop: WHILE '(' bool_expr ')' . simple
  102     | WHILE '(' bool_expr ')' . compound

    ID       shift, and go to state 103
    MM       shift, and go to state 105
    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60
    PP       shift, and go to state 106
    PRINT    shift, and go to state 107
    '{'      shift, and go to state 86
    '('      shift, and go to state 110
    ';'      shift, and go to state 192
    '+'      shift, and go to state 112
    '-'      shift, and go to state 113

    compound    go to state 196
    const_expr  go to state 115
    simple      go to state 197
    name        go to state 118
    expr        go to state 119
    term        go to state 120
    factor      go to state 121
    PrefixOp    go to state 122
    call        go to state 138


State 187

  114 expr_list: expr ',' . expr_list

    ID       shift, and go to state 103
    MM       shift, and go to state 105
    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60
    PP       shift, and go to state 106
    '('      shift, and go to state 110
    '+'      shift, and go to state 112
    '-'      shift, and go to state 113

    const_expr  go to state 115
    name        go to state 136
    expr        go to state 170
    term        go to state 120
    factor      go to state 121
    PrefixOp    go to state 122
    call        go to state 138
    expr_list   go to state 198


State 188

  112 call: name '(' expr_list ')' . ';'

    ';'  shift, and go to state 199


State 189

   70 simple: name '=' expr ';' .

    $default  reduce using rule 70 (simple)


State 190

  103 loop: FOR '(' ForInitOpt ';' bool_expr . ';' ForUpdateOpt ')' simple
  104     | FOR '(' ForInitOpt ';' bool_expr . ';' ForUpdateOpt ')' compound

    ';'  shift, and go to state 200


State 191

   79 expr: expr . '+' term
   80     | expr . '-' term
  100 bool_expr: expr Infixop expr .

    '+'  shift, and go to state 149
    '-'  shift, and go to state 150

    $default  reduce using rule 100 (bool_expr)


State 192

   75 simple: ';' .

    $default  reduce using rule 75 (simple)


State 193

   97 conditional: IF '(' bool_expr ')' compound . ELSE simple
   98            | IF '(' bool_expr ')' compound . ELSE compound

    ELSE  shift, and go to state 201


State 194

   96 conditional: IF '(' bool_expr ')' simple . ELSE simple
   99            | IF '(' bool_expr ')' simple . ELSE compound

    ELSE  shift, and go to state 202


State 195

   71 simple: PRINT '(' expr ')' ';' .

    $default  reduce using rule 71 (simple)


State 196

  102 loop: WHILE '(' bool_expr ')' compound .

    $default  reduce using rule 102 (loop)


State 197

  101 loop: WHILE '(' bool_expr ')' simple .

    $default  reduce using rule 101 (loop)


State 198

  114 expr_list: expr ',' expr_list .

    $default  reduce using rule 114 (expr_list)


State 199

  112 call: name '(' expr_list ')' ';' .

    $default  reduce using rule 112 (call)


State 200

  103 loop: FOR '(' ForInitOpt ';' bool_expr ';' . ForUpdateOpt ')' simple
  104     | FOR '(' ForInitOpt ';' bool_expr ';' . ForUpdateOpt ')' compound

    ID  shift, and go to state 203

    $default  reduce using rule 108 (ForUpdateOpt)

    ForUpdateOpt  go to state 204


State 201

   97 conditional: IF '(' bool_expr ')' compound ELSE . simple
   98            | IF '(' bool_expr ')' compound ELSE . compound

    ID       shift, and go to state 103
    MM       shift, and go to state 105
    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60
    PP       shift, and go to state 106
    PRINT    shift, and go to state 107
    '{'      shift, and go to state 86
    '('      shift, and go to state 110
    ';'      shift, and go to state 192
    '+'      shift, and go to state 112
    '-'      shift, and go to state 113

    compound    go to state 205
    const_expr  go to state 115
    simple      go to state 206
    name        go to state 118
    expr        go to state 119
    term        go to state 120
    factor      go to state 121
    PrefixOp    go to state 122
    call        go to state 138


State 202

   96 conditional: IF '(' bool_expr ')' simple ELSE . simple
   99            | IF '(' bool_expr ')' simple ELSE . compound

    ID       shift, and go to state 103
    MM       shift, and go to state 105
    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60
    PP       shift, and go to state 106
    PRINT    shift, and go to state 107
    '{'      shift, and go to state 86
    '('      shift, and go to state 110
    ';'      shift, and go to state 192
    '+'      shift, and go to state 112
    '-'      shift, and go to state 113

    compound    go to state 207
    const_expr  go to state 115
    simple      go to state 208
    name        go to state 118
    expr        go to state 119
    term        go to state 120
    factor      go to state 121
    PrefixOp    go to state 122
    call        go to state 138


State 203

  109 ForUpdateOpt: ID . PP
  110             | ID . MM

    MM  shift, and go to state 209
    PP  shift, and go to state 210


State 204

  103 loop: FOR '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt . ')' simple
  104     | FOR '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt . ')' compound

    ')'  shift, and go to state 211


State 205

   98 conditional: IF '(' bool_expr ')' compound ELSE compound .

    $default  reduce using rule 98 (conditional)


State 206

   97 conditional: IF '(' bool_expr ')' compound ELSE simple .

    $default  reduce using rule 97 (conditional)


State 207

   99 conditional: IF '(' bool_expr ')' simple ELSE compound .

    $default  reduce using rule 99 (conditional)


State 208

   96 conditional: IF '(' bool_expr ')' simple ELSE simple .

    $default  reduce using rule 96 (conditional)


State 209

  110 ForUpdateOpt: ID MM .

    $default  reduce using rule 110 (ForUpdateOpt)


State 210

  109 ForUpdateOpt: ID PP .

    $default  reduce using rule 109 (ForUpdateOpt)


State 211

  103 loop: FOR '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' . simple
  104     | FOR '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' . compound

    ID       shift, and go to state 103
    MM       shift, and go to state 105
    INT_L    shift, and go to state 59
    FLOAT_L  shift, and go to state 60
    PP       shift, and go to state 106
    PRINT    shift, and go to state 107
    '{'      shift, and go to state 86
    '('      shift, and go to state 110
    ';'      shift, and go to state 192
    '+'      shift, and go to state 112
    '-'      shift, and go to state 113

    compound    go to state 212
    const_expr  go to state 115
    simple      go to state 213
    name        go to state 118
    expr        go to state 119
    term        go to state 120
    factor      go to state 121
    PrefixOp    go to state 122
    call        go to state 138


State 212

  104 loop: FOR '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' compound .

    $default  reduce using rule 104 (loop)


State 213

  103 loop: FOR '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' simple .

    $default  reduce using rule 103 (loop)
