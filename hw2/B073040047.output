Terminals unused in grammar

    AND
    EQ
    GE
    LE
    NE
    OR
    STR


Rules useless in parser due to conflicts

   21 $@7: %empty


State 6 conflicts: 1 shift/reduce
State 9 conflicts: 5 reduce/reduce
State 40 conflicts: 2 shift/reduce
State 57 conflicts: 11 shift/reduce
State 58 conflicts: 11 shift/reduce
State 63 conflicts: 1 shift/reduce
State 66 conflicts: 1 shift/reduce
State 96 conflicts: 7 reduce/reduce
State 107 conflicts: 2 shift/reduce, 1 reduce/reduce
State 125 conflicts: 2 shift/reduce
State 130 conflicts: 1 shift/reduce
State 186 conflicts: 8 shift/reduce
State 187 conflicts: 8 shift/reduce


Grammar

    0 $accept: classes $end

    1 classes: %empty
    2        | classes class

    3 $@1: %empty

    4 $@2: %empty

    5 class: CLASS ID '{' $@1 fields methods $@2 '}'
    6      | CLASS ID '{' '}'

    7 fields: %empty
    8       | fields declarations

    9 methods: %empty
   10        | methods type ID '(' id_list_star ')' compound
   11        | methods type MAIN '(' id_list_star ')' compound

   12 id_list_star: %empty
   13             | id_list

   14 compound: '{' '}'

   15 $@3: %empty

   16 $@4: %empty

   17 compound: '{' $@3 declarations $@4 '}'

   18 $@5: %empty

   19 $@6: %empty

   20 compound: '{' $@5 statement $@6 '}'

   21 $@7: %empty

   22 $@8: %empty

   23 compound: '{' $@7 declarations statement $@8 '}'

   24 declarations: specifier type id_list ';'
   25             | specifier type id_list_init ';'
   26             | FINAL type id_list_init ';'
   27             | specifier arr_type arr_init ';'

   28 specifier: %empty
   29          | STATIC

   30 id_list: ID
   31        | id_list ',' ID
   32        | id_list_init
   33        | id_list ',' id_list_init

   34 id_list_init: ID '=' const_expr
   35             | id_list_init ',' ID '=' const_expr

   36 type: INT
   37     | FLOAT
   38     | CHAR
   39     | BOOLEAN
   40     | VOID

   41 const_expr: INT_L
   42           | FLOAT_L
   43           | INT_L Infixop INT_L
   44           | INT_L Infixop FLOAT_L
   45           | FLOAT_L Infixop INT_L
   46           | FLOAT_L Infixop FLOAT_L

   47 Infixop: '+'
   48        | '-'
   49        | '*'
   50        | '/'
   51        | '%'
   52        | '>'
   53        | '<'
   54        | '&'
   55        | '|'
   56        | '<' '='
   57        | '>' '='
   58        | '=' '='
   59        | '!' '='
   60        | '&' '&'
   61        | '|' '|'

   62 arr_type: INT '[' ']'
   63         | FLOAT '[' ']'
   64         | CHAR '[' ']'
   65         | BOOLEAN '[' ']'

   66 arr_init: '=' NEW type '[' INT_L ']'

   67 statement: compound
   68          | simple ';'
   69          | conditional ';'
   70          | loop ';'
   71          | return ';'
   72          | call ';'
   73          | ';'

   74 simple: name '=' expr ';'
   75       | PRINT '(' expr ')' ';'
   76       | name PP ';'
   77       | name MM ';'
   78       | expr ';'
   79       | ';'

   80 name: ID
   81     | name '.' ID

   82 expr: term
   83     | expr '+' term
   84     | expr '-' term

   85 term: factor
   86     | factor '*' factor
   87     | factor '/' factor

   88 factor: ID
   89       | const_expr
   90       | '(' expr ')'
   91       | PrefixOp ID
   92       | ID PostfixOp
   93       | call

   94 PrefixOp: PP
   95         | MM
   96         | '+'
   97         | '-'

   98 PostfixOp: PP
   99          | MM

  100 conditional: IF '(' bool_expr ')' simple ELSE simple
  101            | IF '(' bool_expr ')' compound ELSE simple
  102            | IF '(' bool_expr ')' compound ELSE compound
  103            | IF '(' bool_expr ')' simple ELSE compound

  104 bool_expr: expr Infixop expr

  105 loop: WHILE '(' bool_expr ')' simple
  106     | WHILE '(' bool_expr ')' compound
  107     | FOR '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' simple
  108     | FOR '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' compound

  109 ForInitOpt: %empty
  110           | id_list_init
  111           | INT id_list_init

  112 ForUpdateOpt: %empty
  113             | ID PP
  114             | ID MM

  115 return: RETURN expr ';'

  116 call: name '(' expr_list ')' ';'

  117 expr_list: expr
  118          | expr ',' expr_list


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 59
    '%' (37) 51
    '&' (38) 54 60
    '(' (40) 10 11 75 90 100 101 102 103 105 106 107 108 116
    ')' (41) 10 11 75 90 100 101 102 103 105 106 107 108 116
    '*' (42) 49 86
    '+' (43) 47 83 96
    ',' (44) 31 33 35 118
    '-' (45) 48 84 97
    '.' (46) 81
    '/' (47) 50 87
    ';' (59) 24 25 26 27 68 69 70 71 72 73 74 75 76 77 78 79 107 108 115 116
    '<' (60) 53 56
    '=' (61) 34 35 56 57 58 59 66 74
    '>' (62) 52 57
    '[' (91) 62 63 64 65 66
    ']' (93) 62 63 64 65 66
    '{' (123) 5 6 14 17 20 23
    '|' (124) 55 61
    '}' (125) 5 6 14 17 20 23
    error (256)
    AND (258)
    BOOLEAN (259) 39 65
    CHAR (260) 38 64
    CLASS (261) 5 6
    ELSE (262) 100 101 102 103
    EQ (263)
    FINAL (264) 26
    FLOAT (265) 37 63
    FOR (266) 107 108
    GE (267)
    ID (268) 5 6 10 30 31 34 35 80 81 88 91 92 113 114
    IF (269) 100 101 102 103
    INT (270) 36 62 111
    LE (271)
    MAIN (272) 11
    MM (273) 77 95 99 114
    NE (274)
    NEW (275) 66
    INT_L (276) 41 43 44 45 66
    FLOAT_L (277) 42 44 45 46
    OR (278)
    PP (279) 76 94 98 113
    PRINT (280) 75
    RETURN (281) 115
    STATIC (282) 29
    STR (283)
    VOID (284) 40
    WHILE (285) 105 106


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    classes (52)
        on left: 1 2
        on right: 0 2
    class (53)
        on left: 5 6
        on right: 2
    $@1 (54)
        on left: 3
        on right: 5
    $@2 (55)
        on left: 4
        on right: 5
    fields (56)
        on left: 7 8
        on right: 5 8
    methods (57)
        on left: 9 10 11
        on right: 5 10 11
    id_list_star (58)
        on left: 12 13
        on right: 10 11
    compound (59)
        on left: 14 17 20 23
        on right: 10 11 67 101 102 103 106 108
    $@3 (60)
        on left: 15
        on right: 17
    $@4 (61)
        on left: 16
        on right: 17
    $@5 (62)
        on left: 18
        on right: 20
    $@6 (63)
        on left: 19
        on right: 20
    $@7 (64)
        on left: 21
        on right: 23
    $@8 (65)
        on left: 22
        on right: 23
    declarations (66)
        on left: 24 25 26 27
        on right: 8 17 23
    specifier (67)
        on left: 28 29
        on right: 24 25 27
    id_list (68)
        on left: 30 31 32 33
        on right: 13 24 31 33
    id_list_init (69)
        on left: 34 35
        on right: 25 26 32 33 35 110 111
    type (70)
        on left: 36 37 38 39 40
        on right: 10 11 24 25 26 66
    const_expr (71)
        on left: 41 42 43 44 45 46
        on right: 34 35 89
    Infixop (72)
        on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
        on right: 43 44 45 46 104
    arr_type (73)
        on left: 62 63 64 65
        on right: 27
    arr_init (74)
        on left: 66
        on right: 27
    statement (75)
        on left: 67 68 69 70 71 72 73
        on right: 20 23
    simple (76)
        on left: 74 75 76 77 78 79
        on right: 68 100 101 103 105 107
    name (77)
        on left: 80 81
        on right: 74 76 77 81 116
    expr (78)
        on left: 82 83 84
        on right: 74 75 78 83 84 90 104 115 117 118
    term (79)
        on left: 85 86 87
        on right: 82 83 84
    factor (80)
        on left: 88 89 90 91 92 93
        on right: 85 86 87
    PrefixOp (81)
        on left: 94 95 96 97
        on right: 91
    PostfixOp (82)
        on left: 98 99
        on right: 92
    conditional (83)
        on left: 100 101 102 103
        on right: 69
    bool_expr (84)
        on left: 104
        on right: 100 101 102 103 105 106 107 108
    loop (85)
        on left: 105 106 107 108
        on right: 70
    ForInitOpt (86)
        on left: 109 110 111
        on right: 107 108
    ForUpdateOpt (87)
        on left: 112 113 114
        on right: 107 108
    return (88)
        on left: 115
        on right: 71
    call (89)
        on left: 116
        on right: 72 93
    expr_list (90)
        on left: 117 118
        on right: 116 118


State 0

    0 $accept: . classes $end

    $default  reduce using rule 1 (classes)

    classes  go to state 1


State 1

    0 $accept: classes . $end
    2 classes: classes . class

    $end   shift, and go to state 2
    CLASS  shift, and go to state 3

    class  go to state 4


State 2

    0 $accept: classes $end .

    $default  accept


State 3

    5 class: CLASS . ID '{' $@1 fields methods $@2 '}'
    6      | CLASS . ID '{' '}'

    ID  shift, and go to state 5


State 4

    2 classes: classes class .

    $default  reduce using rule 2 (classes)


State 5

    5 class: CLASS ID . '{' $@1 fields methods $@2 '}'
    6      | CLASS ID . '{' '}'

    '{'  shift, and go to state 6


State 6

    5 class: CLASS ID '{' . $@1 fields methods $@2 '}'
    6      | CLASS ID '{' . '}'

    '}'  shift, and go to state 7

    '}'       [reduce using rule 3 ($@1)]
    $default  reduce using rule 3 ($@1)

    $@1  go to state 8


State 7

    6 class: CLASS ID '{' '}' .

    $default  reduce using rule 6 (class)


State 8

    5 class: CLASS ID '{' $@1 . fields methods $@2 '}'

    $default  reduce using rule 7 (fields)

    fields  go to state 9


State 9

    5 class: CLASS ID '{' $@1 fields . methods $@2 '}'
    8 fields: fields . declarations

    FINAL   shift, and go to state 10
    STATIC  shift, and go to state 11

    BOOLEAN   reduce using rule 9 (methods)
    BOOLEAN   [reduce using rule 28 (specifier)]
    CHAR      reduce using rule 9 (methods)
    CHAR      [reduce using rule 28 (specifier)]
    FLOAT     reduce using rule 9 (methods)
    FLOAT     [reduce using rule 28 (specifier)]
    INT       reduce using rule 9 (methods)
    INT       [reduce using rule 28 (specifier)]
    VOID      reduce using rule 9 (methods)
    VOID      [reduce using rule 28 (specifier)]
    $default  reduce using rule 9 (methods)

    methods       go to state 12
    declarations  go to state 13
    specifier     go to state 14


State 10

   26 declarations: FINAL . type id_list_init ';'

    BOOLEAN  shift, and go to state 15
    CHAR     shift, and go to state 16
    FLOAT    shift, and go to state 17
    INT      shift, and go to state 18
    VOID     shift, and go to state 19

    type  go to state 20


State 11

   29 specifier: STATIC .

    $default  reduce using rule 29 (specifier)


State 12

    5 class: CLASS ID '{' $@1 fields methods . $@2 '}'
   10 methods: methods . type ID '(' id_list_star ')' compound
   11        | methods . type MAIN '(' id_list_star ')' compound

    BOOLEAN  shift, and go to state 15
    CHAR     shift, and go to state 16
    FLOAT    shift, and go to state 17
    INT      shift, and go to state 18
    VOID     shift, and go to state 19

    $default  reduce using rule 4 ($@2)

    $@2   go to state 21
    type  go to state 22


State 13

    8 fields: fields declarations .

    $default  reduce using rule 8 (fields)


State 14

   24 declarations: specifier . type id_list ';'
   25             | specifier . type id_list_init ';'
   27             | specifier . arr_type arr_init ';'

    BOOLEAN  shift, and go to state 23
    CHAR     shift, and go to state 24
    FLOAT    shift, and go to state 25
    INT      shift, and go to state 26
    VOID     shift, and go to state 19

    type      go to state 27
    arr_type  go to state 28


State 15

   39 type: BOOLEAN .

    $default  reduce using rule 39 (type)


State 16

   38 type: CHAR .

    $default  reduce using rule 38 (type)


State 17

   37 type: FLOAT .

    $default  reduce using rule 37 (type)


State 18

   36 type: INT .

    $default  reduce using rule 36 (type)


State 19

   40 type: VOID .

    $default  reduce using rule 40 (type)


State 20

   26 declarations: FINAL type . id_list_init ';'

    ID  shift, and go to state 29

    id_list_init  go to state 30


State 21

    5 class: CLASS ID '{' $@1 fields methods $@2 . '}'

    '}'  shift, and go to state 31


State 22

   10 methods: methods type . ID '(' id_list_star ')' compound
   11        | methods type . MAIN '(' id_list_star ')' compound

    ID    shift, and go to state 32
    MAIN  shift, and go to state 33


State 23

   39 type: BOOLEAN .
   65 arr_type: BOOLEAN . '[' ']'

    '['  shift, and go to state 34

    $default  reduce using rule 39 (type)


State 24

   38 type: CHAR .
   64 arr_type: CHAR . '[' ']'

    '['  shift, and go to state 35

    $default  reduce using rule 38 (type)


State 25

   37 type: FLOAT .
   63 arr_type: FLOAT . '[' ']'

    '['  shift, and go to state 36

    $default  reduce using rule 37 (type)


State 26

   36 type: INT .
   62 arr_type: INT . '[' ']'

    '['  shift, and go to state 37

    $default  reduce using rule 36 (type)


State 27

   24 declarations: specifier type . id_list ';'
   25             | specifier type . id_list_init ';'

    ID  shift, and go to state 38

    id_list       go to state 39
    id_list_init  go to state 40


State 28

   27 declarations: specifier arr_type . arr_init ';'

    '='  shift, and go to state 41

    arr_init  go to state 42


State 29

   34 id_list_init: ID . '=' const_expr

    '='  shift, and go to state 43


State 30

   26 declarations: FINAL type id_list_init . ';'
   35 id_list_init: id_list_init . ',' ID '=' const_expr

    ';'  shift, and go to state 44
    ','  shift, and go to state 45


State 31

    5 class: CLASS ID '{' $@1 fields methods $@2 '}' .

    $default  reduce using rule 5 (class)


State 32

   10 methods: methods type ID . '(' id_list_star ')' compound

    '('  shift, and go to state 46


State 33

   11 methods: methods type MAIN . '(' id_list_star ')' compound

    '('  shift, and go to state 47


State 34

   65 arr_type: BOOLEAN '[' . ']'

    ']'  shift, and go to state 48


State 35

   64 arr_type: CHAR '[' . ']'

    ']'  shift, and go to state 49


State 36

   63 arr_type: FLOAT '[' . ']'

    ']'  shift, and go to state 50


State 37

   62 arr_type: INT '[' . ']'

    ']'  shift, and go to state 51


State 38

   30 id_list: ID .
   34 id_list_init: ID . '=' const_expr

    '='  shift, and go to state 43

    $default  reduce using rule 30 (id_list)


State 39

   24 declarations: specifier type id_list . ';'
   31 id_list: id_list . ',' ID
   33        | id_list . ',' id_list_init

    ';'  shift, and go to state 52
    ','  shift, and go to state 53


State 40

   25 declarations: specifier type id_list_init . ';'
   32 id_list: id_list_init .
   35 id_list_init: id_list_init . ',' ID '=' const_expr

    ';'  shift, and go to state 54
    ','  shift, and go to state 45

    ';'  [reduce using rule 32 (id_list)]
    ','  [reduce using rule 32 (id_list)]


State 41

   66 arr_init: '=' . NEW type '[' INT_L ']'

    NEW  shift, and go to state 55


State 42

   27 declarations: specifier arr_type arr_init . ';'

    ';'  shift, and go to state 56


State 43

   34 id_list_init: ID '=' . const_expr

    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58

    const_expr  go to state 59


State 44

   26 declarations: FINAL type id_list_init ';' .

    $default  reduce using rule 26 (declarations)


State 45

   35 id_list_init: id_list_init ',' . ID '=' const_expr

    ID  shift, and go to state 60


State 46

   10 methods: methods type ID '(' . id_list_star ')' compound

    ID  shift, and go to state 38

    $default  reduce using rule 12 (id_list_star)

    id_list_star  go to state 61
    id_list       go to state 62
    id_list_init  go to state 63


State 47

   11 methods: methods type MAIN '(' . id_list_star ')' compound

    ID  shift, and go to state 38

    $default  reduce using rule 12 (id_list_star)

    id_list_star  go to state 64
    id_list       go to state 62
    id_list_init  go to state 63


State 48

   65 arr_type: BOOLEAN '[' ']' .

    $default  reduce using rule 65 (arr_type)


State 49

   64 arr_type: CHAR '[' ']' .

    $default  reduce using rule 64 (arr_type)


State 50

   63 arr_type: FLOAT '[' ']' .

    $default  reduce using rule 63 (arr_type)


State 51

   62 arr_type: INT '[' ']' .

    $default  reduce using rule 62 (arr_type)


State 52

   24 declarations: specifier type id_list ';' .

    $default  reduce using rule 24 (declarations)


State 53

   31 id_list: id_list ',' . ID
   33        | id_list ',' . id_list_init

    ID  shift, and go to state 65

    id_list_init  go to state 66


State 54

   25 declarations: specifier type id_list_init ';' .

    $default  reduce using rule 25 (declarations)


State 55

   66 arr_init: '=' NEW . type '[' INT_L ']'

    BOOLEAN  shift, and go to state 15
    CHAR     shift, and go to state 16
    FLOAT    shift, and go to state 17
    INT      shift, and go to state 18
    VOID     shift, and go to state 19

    type  go to state 67


State 56

   27 declarations: specifier arr_type arr_init ';' .

    $default  reduce using rule 27 (declarations)


State 57

   41 const_expr: INT_L .
   43           | INT_L . Infixop INT_L
   44           | INT_L . Infixop FLOAT_L

    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73
    '>'  shift, and go to state 74
    '<'  shift, and go to state 75
    '&'  shift, and go to state 76
    '|'  shift, and go to state 77
    '!'  shift, and go to state 78

    '='       [reduce using rule 41 (const_expr)]
    '+'       [reduce using rule 41 (const_expr)]
    '-'       [reduce using rule 41 (const_expr)]
    '*'       [reduce using rule 41 (const_expr)]
    '/'       [reduce using rule 41 (const_expr)]
    '%'       [reduce using rule 41 (const_expr)]
    '>'       [reduce using rule 41 (const_expr)]
    '<'       [reduce using rule 41 (const_expr)]
    '&'       [reduce using rule 41 (const_expr)]
    '|'       [reduce using rule 41 (const_expr)]
    '!'       [reduce using rule 41 (const_expr)]
    $default  reduce using rule 41 (const_expr)

    Infixop  go to state 79


State 58

   42 const_expr: FLOAT_L .
   45           | FLOAT_L . Infixop INT_L
   46           | FLOAT_L . Infixop FLOAT_L

    '='  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73
    '>'  shift, and go to state 74
    '<'  shift, and go to state 75
    '&'  shift, and go to state 76
    '|'  shift, and go to state 77
    '!'  shift, and go to state 78

    '='       [reduce using rule 42 (const_expr)]
    '+'       [reduce using rule 42 (const_expr)]
    '-'       [reduce using rule 42 (const_expr)]
    '*'       [reduce using rule 42 (const_expr)]
    '/'       [reduce using rule 42 (const_expr)]
    '%'       [reduce using rule 42 (const_expr)]
    '>'       [reduce using rule 42 (const_expr)]
    '<'       [reduce using rule 42 (const_expr)]
    '&'       [reduce using rule 42 (const_expr)]
    '|'       [reduce using rule 42 (const_expr)]
    '!'       [reduce using rule 42 (const_expr)]
    $default  reduce using rule 42 (const_expr)

    Infixop  go to state 80


State 59

   34 id_list_init: ID '=' const_expr .

    $default  reduce using rule 34 (id_list_init)


State 60

   35 id_list_init: id_list_init ',' ID . '=' const_expr

    '='  shift, and go to state 81


State 61

   10 methods: methods type ID '(' id_list_star . ')' compound

    ')'  shift, and go to state 82


State 62

   13 id_list_star: id_list .
   31 id_list: id_list . ',' ID
   33        | id_list . ',' id_list_init

    ','  shift, and go to state 53

    $default  reduce using rule 13 (id_list_star)


State 63

   32 id_list: id_list_init .
   35 id_list_init: id_list_init . ',' ID '=' const_expr

    ','  shift, and go to state 45

    ','       [reduce using rule 32 (id_list)]
    $default  reduce using rule 32 (id_list)


State 64

   11 methods: methods type MAIN '(' id_list_star . ')' compound

    ')'  shift, and go to state 83


State 65

   31 id_list: id_list ',' ID .
   34 id_list_init: ID . '=' const_expr

    '='  shift, and go to state 43

    $default  reduce using rule 31 (id_list)


State 66

   33 id_list: id_list ',' id_list_init .
   35 id_list_init: id_list_init . ',' ID '=' const_expr

    ','  shift, and go to state 45

    ','       [reduce using rule 33 (id_list)]
    $default  reduce using rule 33 (id_list)


State 67

   66 arr_init: '=' NEW type . '[' INT_L ']'

    '['  shift, and go to state 84


State 68

   58 Infixop: '=' . '='

    '='  shift, and go to state 85


State 69

   47 Infixop: '+' .

    $default  reduce using rule 47 (Infixop)


State 70

   48 Infixop: '-' .

    $default  reduce using rule 48 (Infixop)


State 71

   49 Infixop: '*' .

    $default  reduce using rule 49 (Infixop)


State 72

   50 Infixop: '/' .

    $default  reduce using rule 50 (Infixop)


State 73

   51 Infixop: '%' .

    $default  reduce using rule 51 (Infixop)


State 74

   52 Infixop: '>' .
   57        | '>' . '='

    '='  shift, and go to state 86

    $default  reduce using rule 52 (Infixop)


State 75

   53 Infixop: '<' .
   56        | '<' . '='

    '='  shift, and go to state 87

    $default  reduce using rule 53 (Infixop)


State 76

   54 Infixop: '&' .
   60        | '&' . '&'

    '&'  shift, and go to state 88

    $default  reduce using rule 54 (Infixop)


State 77

   55 Infixop: '|' .
   61        | '|' . '|'

    '|'  shift, and go to state 89

    $default  reduce using rule 55 (Infixop)


State 78

   59 Infixop: '!' . '='

    '='  shift, and go to state 90


State 79

   43 const_expr: INT_L Infixop . INT_L
   44           | INT_L Infixop . FLOAT_L

    INT_L    shift, and go to state 91
    FLOAT_L  shift, and go to state 92


State 80

   45 const_expr: FLOAT_L Infixop . INT_L
   46           | FLOAT_L Infixop . FLOAT_L

    INT_L    shift, and go to state 93
    FLOAT_L  shift, and go to state 94


State 81

   35 id_list_init: id_list_init ',' ID '=' . const_expr

    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58

    const_expr  go to state 95


State 82

   10 methods: methods type ID '(' id_list_star ')' . compound

    '{'  shift, and go to state 96

    compound  go to state 97


State 83

   11 methods: methods type MAIN '(' id_list_star ')' . compound

    '{'  shift, and go to state 96

    compound  go to state 98


State 84

   66 arr_init: '=' NEW type '[' . INT_L ']'

    INT_L  shift, and go to state 99


State 85

   58 Infixop: '=' '=' .

    $default  reduce using rule 58 (Infixop)


State 86

   57 Infixop: '>' '=' .

    $default  reduce using rule 57 (Infixop)


State 87

   56 Infixop: '<' '=' .

    $default  reduce using rule 56 (Infixop)


State 88

   60 Infixop: '&' '&' .

    $default  reduce using rule 60 (Infixop)


State 89

   61 Infixop: '|' '|' .

    $default  reduce using rule 61 (Infixop)


State 90

   59 Infixop: '!' '=' .

    $default  reduce using rule 59 (Infixop)


State 91

   43 const_expr: INT_L Infixop INT_L .

    $default  reduce using rule 43 (const_expr)


State 92

   44 const_expr: INT_L Infixop FLOAT_L .

    $default  reduce using rule 44 (const_expr)


State 93

   45 const_expr: FLOAT_L Infixop INT_L .

    $default  reduce using rule 45 (const_expr)


State 94

   46 const_expr: FLOAT_L Infixop FLOAT_L .

    $default  reduce using rule 46 (const_expr)


State 95

   35 id_list_init: id_list_init ',' ID '=' const_expr .

    $default  reduce using rule 35 (id_list_init)


State 96

   14 compound: '{' . '}'
   17         | '{' . $@3 declarations $@4 '}'
   20         | '{' . $@5 statement $@6 '}'
   23         | '{' . $@7 declarations statement $@8 '}'

    '}'  shift, and go to state 100

    BOOLEAN   reduce using rule 15 ($@3)
    BOOLEAN   [reduce using rule 21 ($@7)]
    CHAR      reduce using rule 15 ($@3)
    CHAR      [reduce using rule 21 ($@7)]
    FINAL     reduce using rule 15 ($@3)
    FINAL     [reduce using rule 21 ($@7)]
    FLOAT     reduce using rule 15 ($@3)
    FLOAT     [reduce using rule 21 ($@7)]
    INT       reduce using rule 15 ($@3)
    INT       [reduce using rule 21 ($@7)]
    STATIC    reduce using rule 15 ($@3)
    STATIC    [reduce using rule 21 ($@7)]
    VOID      reduce using rule 15 ($@3)
    VOID      [reduce using rule 21 ($@7)]
    $default  reduce using rule 18 ($@5)

    $@3  go to state 101
    $@5  go to state 102
    $@7  go to state 103


State 97

   10 methods: methods type ID '(' id_list_star ')' compound .

    $default  reduce using rule 10 (methods)


State 98

   11 methods: methods type MAIN '(' id_list_star ')' compound .

    $default  reduce using rule 11 (methods)


State 99

   66 arr_init: '=' NEW type '[' INT_L . ']'

    ']'  shift, and go to state 104


State 100

   14 compound: '{' '}' .

    $default  reduce using rule 14 (compound)


State 101

   17 compound: '{' $@3 . declarations $@4 '}'

    FINAL   shift, and go to state 10
    STATIC  shift, and go to state 11

    $default  reduce using rule 28 (specifier)

    declarations  go to state 105
    specifier     go to state 14


State 102

   20 compound: '{' $@5 . statement $@6 '}'

    FOR      shift, and go to state 106
    ID       shift, and go to state 107
    IF       shift, and go to state 108
    MM       shift, and go to state 109
    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58
    PP       shift, and go to state 110
    PRINT    shift, and go to state 111
    RETURN   shift, and go to state 112
    WHILE    shift, and go to state 113
    '{'      shift, and go to state 96
    '('      shift, and go to state 114
    ';'      shift, and go to state 115
    '+'      shift, and go to state 116
    '-'      shift, and go to state 117

    compound     go to state 118
    const_expr   go to state 119
    statement    go to state 120
    simple       go to state 121
    name         go to state 122
    expr         go to state 123
    term         go to state 124
    factor       go to state 125
    PrefixOp     go to state 126
    conditional  go to state 127
    loop         go to state 128
    return       go to state 129
    call         go to state 130


State 103

   23 compound: '{' $@7 . declarations statement $@8 '}'

    FINAL   shift, and go to state 10
    STATIC  shift, and go to state 11

    $default  reduce using rule 28 (specifier)

    declarations  go to state 131
    specifier     go to state 14


State 104

   66 arr_init: '=' NEW type '[' INT_L ']' .

    $default  reduce using rule 66 (arr_init)


State 105

   17 compound: '{' $@3 declarations . $@4 '}'

    $default  reduce using rule 16 ($@4)

    $@4  go to state 132


State 106

  107 loop: FOR . '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' simple
  108     | FOR . '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' compound

    '('  shift, and go to state 133


State 107

   80 name: ID .
   88 factor: ID .
   92       | ID . PostfixOp

    MM  shift, and go to state 134
    PP  shift, and go to state 135

    MM        [reduce using rule 80 (name)]
    PP        [reduce using rule 80 (name)]
    '('       reduce using rule 80 (name)
    '='       reduce using rule 80 (name)
    '='       [reduce using rule 88 (factor)]
    '.'       reduce using rule 80 (name)
    $default  reduce using rule 88 (factor)

    PostfixOp  go to state 136


State 108

  100 conditional: IF . '(' bool_expr ')' simple ELSE simple
  101            | IF . '(' bool_expr ')' compound ELSE simple
  102            | IF . '(' bool_expr ')' compound ELSE compound
  103            | IF . '(' bool_expr ')' simple ELSE compound

    '('  shift, and go to state 137


State 109

   95 PrefixOp: MM .

    $default  reduce using rule 95 (PrefixOp)


State 110

   94 PrefixOp: PP .

    $default  reduce using rule 94 (PrefixOp)


State 111

   75 simple: PRINT . '(' expr ')' ';'

    '('  shift, and go to state 138


State 112

  115 return: RETURN . expr ';'

    ID       shift, and go to state 107
    MM       shift, and go to state 109
    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58
    PP       shift, and go to state 110
    '('      shift, and go to state 114
    '+'      shift, and go to state 116
    '-'      shift, and go to state 117

    const_expr  go to state 119
    name        go to state 139
    expr        go to state 140
    term        go to state 124
    factor      go to state 125
    PrefixOp    go to state 126
    call        go to state 141


State 113

  105 loop: WHILE . '(' bool_expr ')' simple
  106     | WHILE . '(' bool_expr ')' compound

    '('  shift, and go to state 142


State 114

   90 factor: '(' . expr ')'

    ID       shift, and go to state 107
    MM       shift, and go to state 109
    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58
    PP       shift, and go to state 110
    '('      shift, and go to state 114
    '+'      shift, and go to state 116
    '-'      shift, and go to state 117

    const_expr  go to state 119
    name        go to state 139
    expr        go to state 143
    term        go to state 124
    factor      go to state 125
    PrefixOp    go to state 126
    call        go to state 141


State 115

   73 statement: ';' .
   79 simple: ';' .

    ';'       reduce using rule 79 (simple)
    $default  reduce using rule 73 (statement)


State 116

   96 PrefixOp: '+' .

    $default  reduce using rule 96 (PrefixOp)


State 117

   97 PrefixOp: '-' .

    $default  reduce using rule 97 (PrefixOp)


State 118

   67 statement: compound .

    $default  reduce using rule 67 (statement)


State 119

   89 factor: const_expr .

    $default  reduce using rule 89 (factor)


State 120

   20 compound: '{' $@5 statement . $@6 '}'

    $default  reduce using rule 19 ($@6)

    $@6  go to state 144


State 121

   68 statement: simple . ';'

    ';'  shift, and go to state 145


State 122

   74 simple: name . '=' expr ';'
   76       | name . PP ';'
   77       | name . MM ';'
   81 name: name . '.' ID
  116 call: name . '(' expr_list ')' ';'

    MM   shift, and go to state 146
    PP   shift, and go to state 147
    '('  shift, and go to state 148
    '='  shift, and go to state 149
    '.'  shift, and go to state 150


State 123

   78 simple: expr . ';'
   83 expr: expr . '+' term
   84     | expr . '-' term

    ';'  shift, and go to state 151
    '+'  shift, and go to state 152
    '-'  shift, and go to state 153


State 124

   82 expr: term .

    $default  reduce using rule 82 (expr)


State 125

   85 term: factor .
   86     | factor . '*' factor
   87     | factor . '/' factor

    '*'  shift, and go to state 154
    '/'  shift, and go to state 155

    '*'       [reduce using rule 85 (term)]
    '/'       [reduce using rule 85 (term)]
    $default  reduce using rule 85 (term)


State 126

   91 factor: PrefixOp . ID

    ID  shift, and go to state 156


State 127

   69 statement: conditional . ';'

    ';'  shift, and go to state 157


State 128

   70 statement: loop . ';'

    ';'  shift, and go to state 158


State 129

   71 statement: return . ';'

    ';'  shift, and go to state 159


State 130

   72 statement: call . ';'
   93 factor: call .

    ';'  shift, and go to state 160

    ';'       [reduce using rule 93 (factor)]
    $default  reduce using rule 93 (factor)


State 131

   23 compound: '{' $@7 declarations . statement $@8 '}'

    FOR      shift, and go to state 106
    ID       shift, and go to state 107
    IF       shift, and go to state 108
    MM       shift, and go to state 109
    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58
    PP       shift, and go to state 110
    PRINT    shift, and go to state 111
    RETURN   shift, and go to state 112
    WHILE    shift, and go to state 113
    '{'      shift, and go to state 96
    '('      shift, and go to state 114
    ';'      shift, and go to state 115
    '+'      shift, and go to state 116
    '-'      shift, and go to state 117

    compound     go to state 118
    const_expr   go to state 119
    statement    go to state 161
    simple       go to state 121
    name         go to state 122
    expr         go to state 123
    term         go to state 124
    factor       go to state 125
    PrefixOp     go to state 126
    conditional  go to state 127
    loop         go to state 128
    return       go to state 129
    call         go to state 130


State 132

   17 compound: '{' $@3 declarations $@4 . '}'

    '}'  shift, and go to state 162


State 133

  107 loop: FOR '(' . ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' simple
  108     | FOR '(' . ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' compound

    ID   shift, and go to state 29
    INT  shift, and go to state 163

    $default  reduce using rule 109 (ForInitOpt)

    id_list_init  go to state 164
    ForInitOpt    go to state 165


State 134

   99 PostfixOp: MM .

    $default  reduce using rule 99 (PostfixOp)


State 135

   98 PostfixOp: PP .

    $default  reduce using rule 98 (PostfixOp)


State 136

   92 factor: ID PostfixOp .

    $default  reduce using rule 92 (factor)


State 137

  100 conditional: IF '(' . bool_expr ')' simple ELSE simple
  101            | IF '(' . bool_expr ')' compound ELSE simple
  102            | IF '(' . bool_expr ')' compound ELSE compound
  103            | IF '(' . bool_expr ')' simple ELSE compound

    ID       shift, and go to state 107
    MM       shift, and go to state 109
    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58
    PP       shift, and go to state 110
    '('      shift, and go to state 114
    '+'      shift, and go to state 116
    '-'      shift, and go to state 117

    const_expr  go to state 119
    name        go to state 139
    expr        go to state 166
    term        go to state 124
    factor      go to state 125
    PrefixOp    go to state 126
    bool_expr   go to state 167
    call        go to state 141


State 138

   75 simple: PRINT '(' . expr ')' ';'

    ID       shift, and go to state 107
    MM       shift, and go to state 109
    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58
    PP       shift, and go to state 110
    '('      shift, and go to state 114
    '+'      shift, and go to state 116
    '-'      shift, and go to state 117

    const_expr  go to state 119
    name        go to state 139
    expr        go to state 168
    term        go to state 124
    factor      go to state 125
    PrefixOp    go to state 126
    call        go to state 141


State 139

   81 name: name . '.' ID
  116 call: name . '(' expr_list ')' ';'

    '('  shift, and go to state 148
    '.'  shift, and go to state 150


State 140

   83 expr: expr . '+' term
   84     | expr . '-' term
  115 return: RETURN expr . ';'

    ';'  shift, and go to state 169
    '+'  shift, and go to state 152
    '-'  shift, and go to state 153


State 141

   93 factor: call .

    $default  reduce using rule 93 (factor)


State 142

  105 loop: WHILE '(' . bool_expr ')' simple
  106     | WHILE '(' . bool_expr ')' compound

    ID       shift, and go to state 107
    MM       shift, and go to state 109
    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58
    PP       shift, and go to state 110
    '('      shift, and go to state 114
    '+'      shift, and go to state 116
    '-'      shift, and go to state 117

    const_expr  go to state 119
    name        go to state 139
    expr        go to state 166
    term        go to state 124
    factor      go to state 125
    PrefixOp    go to state 126
    bool_expr   go to state 170
    call        go to state 141


State 143

   83 expr: expr . '+' term
   84     | expr . '-' term
   90 factor: '(' expr . ')'

    ')'  shift, and go to state 171
    '+'  shift, and go to state 152
    '-'  shift, and go to state 153


State 144

   20 compound: '{' $@5 statement $@6 . '}'

    '}'  shift, and go to state 172


State 145

   68 statement: simple ';' .

    $default  reduce using rule 68 (statement)


State 146

   77 simple: name MM . ';'

    ';'  shift, and go to state 173


State 147

   76 simple: name PP . ';'

    ';'  shift, and go to state 174


State 148

  116 call: name '(' . expr_list ')' ';'

    ID       shift, and go to state 107
    MM       shift, and go to state 109
    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58
    PP       shift, and go to state 110
    '('      shift, and go to state 114
    '+'      shift, and go to state 116
    '-'      shift, and go to state 117

    const_expr  go to state 119
    name        go to state 139
    expr        go to state 175
    term        go to state 124
    factor      go to state 125
    PrefixOp    go to state 126
    call        go to state 141
    expr_list   go to state 176


State 149

   74 simple: name '=' . expr ';'

    ID       shift, and go to state 107
    MM       shift, and go to state 109
    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58
    PP       shift, and go to state 110
    '('      shift, and go to state 114
    '+'      shift, and go to state 116
    '-'      shift, and go to state 117

    const_expr  go to state 119
    name        go to state 139
    expr        go to state 177
    term        go to state 124
    factor      go to state 125
    PrefixOp    go to state 126
    call        go to state 141


State 150

   81 name: name '.' . ID

    ID  shift, and go to state 178


State 151

   78 simple: expr ';' .

    $default  reduce using rule 78 (simple)


State 152

   83 expr: expr '+' . term

    ID       shift, and go to state 107
    MM       shift, and go to state 109
    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58
    PP       shift, and go to state 110
    '('      shift, and go to state 114
    '+'      shift, and go to state 116
    '-'      shift, and go to state 117

    const_expr  go to state 119
    name        go to state 139
    term        go to state 179
    factor      go to state 125
    PrefixOp    go to state 126
    call        go to state 141


State 153

   84 expr: expr '-' . term

    ID       shift, and go to state 107
    MM       shift, and go to state 109
    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58
    PP       shift, and go to state 110
    '('      shift, and go to state 114
    '+'      shift, and go to state 116
    '-'      shift, and go to state 117

    const_expr  go to state 119
    name        go to state 139
    term        go to state 180
    factor      go to state 125
    PrefixOp    go to state 126
    call        go to state 141


State 154

   86 term: factor '*' . factor

    ID       shift, and go to state 107
    MM       shift, and go to state 109
    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58
    PP       shift, and go to state 110
    '('      shift, and go to state 114
    '+'      shift, and go to state 116
    '-'      shift, and go to state 117

    const_expr  go to state 119
    name        go to state 139
    factor      go to state 181
    PrefixOp    go to state 126
    call        go to state 141


State 155

   87 term: factor '/' . factor

    ID       shift, and go to state 107
    MM       shift, and go to state 109
    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58
    PP       shift, and go to state 110
    '('      shift, and go to state 114
    '+'      shift, and go to state 116
    '-'      shift, and go to state 117

    const_expr  go to state 119
    name        go to state 139
    factor      go to state 182
    PrefixOp    go to state 126
    call        go to state 141


State 156

   91 factor: PrefixOp ID .

    $default  reduce using rule 91 (factor)


State 157

   69 statement: conditional ';' .

    $default  reduce using rule 69 (statement)


State 158

   70 statement: loop ';' .

    $default  reduce using rule 70 (statement)


State 159

   71 statement: return ';' .

    $default  reduce using rule 71 (statement)


State 160

   72 statement: call ';' .

    $default  reduce using rule 72 (statement)


State 161

   23 compound: '{' $@7 declarations statement . $@8 '}'

    $default  reduce using rule 22 ($@8)

    $@8  go to state 183


State 162

   17 compound: '{' $@3 declarations $@4 '}' .

    $default  reduce using rule 17 (compound)


State 163

  111 ForInitOpt: INT . id_list_init

    ID  shift, and go to state 29

    id_list_init  go to state 184


State 164

   35 id_list_init: id_list_init . ',' ID '=' const_expr
  110 ForInitOpt: id_list_init .

    ','  shift, and go to state 45

    $default  reduce using rule 110 (ForInitOpt)


State 165

  107 loop: FOR '(' ForInitOpt . ';' bool_expr ';' ForUpdateOpt ')' simple
  108     | FOR '(' ForInitOpt . ';' bool_expr ';' ForUpdateOpt ')' compound

    ';'  shift, and go to state 185


State 166

   83 expr: expr . '+' term
   84     | expr . '-' term
  104 bool_expr: expr . Infixop expr

    '='  shift, and go to state 68
    '+'  shift, and go to state 186
    '-'  shift, and go to state 187
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72
    '%'  shift, and go to state 73
    '>'  shift, and go to state 74
    '<'  shift, and go to state 75
    '&'  shift, and go to state 76
    '|'  shift, and go to state 77
    '!'  shift, and go to state 78

    Infixop  go to state 188


State 167

  100 conditional: IF '(' bool_expr . ')' simple ELSE simple
  101            | IF '(' bool_expr . ')' compound ELSE simple
  102            | IF '(' bool_expr . ')' compound ELSE compound
  103            | IF '(' bool_expr . ')' simple ELSE compound

    ')'  shift, and go to state 189


State 168

   75 simple: PRINT '(' expr . ')' ';'
   83 expr: expr . '+' term
   84     | expr . '-' term

    ')'  shift, and go to state 190
    '+'  shift, and go to state 152
    '-'  shift, and go to state 153


State 169

  115 return: RETURN expr ';' .

    $default  reduce using rule 115 (return)


State 170

  105 loop: WHILE '(' bool_expr . ')' simple
  106     | WHILE '(' bool_expr . ')' compound

    ')'  shift, and go to state 191


State 171

   90 factor: '(' expr ')' .

    $default  reduce using rule 90 (factor)


State 172

   20 compound: '{' $@5 statement $@6 '}' .

    $default  reduce using rule 20 (compound)


State 173

   77 simple: name MM ';' .

    $default  reduce using rule 77 (simple)


State 174

   76 simple: name PP ';' .

    $default  reduce using rule 76 (simple)


State 175

   83 expr: expr . '+' term
   84     | expr . '-' term
  117 expr_list: expr .
  118          | expr . ',' expr_list

    ','  shift, and go to state 192
    '+'  shift, and go to state 152
    '-'  shift, and go to state 153

    $default  reduce using rule 117 (expr_list)


State 176

  116 call: name '(' expr_list . ')' ';'

    ')'  shift, and go to state 193


State 177

   74 simple: name '=' expr . ';'
   83 expr: expr . '+' term
   84     | expr . '-' term

    ';'  shift, and go to state 194
    '+'  shift, and go to state 152
    '-'  shift, and go to state 153


State 178

   81 name: name '.' ID .

    $default  reduce using rule 81 (name)


State 179

   83 expr: expr '+' term .

    $default  reduce using rule 83 (expr)


State 180

   84 expr: expr '-' term .

    $default  reduce using rule 84 (expr)


State 181

   86 term: factor '*' factor .

    $default  reduce using rule 86 (term)


State 182

   87 term: factor '/' factor .

    $default  reduce using rule 87 (term)


State 183

   23 compound: '{' $@7 declarations statement $@8 . '}'

    '}'  shift, and go to state 195


State 184

   35 id_list_init: id_list_init . ',' ID '=' const_expr
  111 ForInitOpt: INT id_list_init .

    ','  shift, and go to state 45

    $default  reduce using rule 111 (ForInitOpt)


State 185

  107 loop: FOR '(' ForInitOpt ';' . bool_expr ';' ForUpdateOpt ')' simple
  108     | FOR '(' ForInitOpt ';' . bool_expr ';' ForUpdateOpt ')' compound

    ID       shift, and go to state 107
    MM       shift, and go to state 109
    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58
    PP       shift, and go to state 110
    '('      shift, and go to state 114
    '+'      shift, and go to state 116
    '-'      shift, and go to state 117

    const_expr  go to state 119
    name        go to state 139
    expr        go to state 166
    term        go to state 124
    factor      go to state 125
    PrefixOp    go to state 126
    bool_expr   go to state 196
    call        go to state 141


State 186

   47 Infixop: '+' .
   83 expr: expr '+' . term

    ID       shift, and go to state 107
    MM       shift, and go to state 109
    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58
    PP       shift, and go to state 110
    '('      shift, and go to state 114
    '+'      shift, and go to state 116
    '-'      shift, and go to state 117

    ID       [reduce using rule 47 (Infixop)]
    MM       [reduce using rule 47 (Infixop)]
    INT_L    [reduce using rule 47 (Infixop)]
    FLOAT_L  [reduce using rule 47 (Infixop)]
    PP       [reduce using rule 47 (Infixop)]
    '('      [reduce using rule 47 (Infixop)]
    '+'      [reduce using rule 47 (Infixop)]
    '-'      [reduce using rule 47 (Infixop)]

    const_expr  go to state 119
    name        go to state 139
    term        go to state 179
    factor      go to state 125
    PrefixOp    go to state 126
    call        go to state 141


State 187

   48 Infixop: '-' .
   84 expr: expr '-' . term

    ID       shift, and go to state 107
    MM       shift, and go to state 109
    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58
    PP       shift, and go to state 110
    '('      shift, and go to state 114
    '+'      shift, and go to state 116
    '-'      shift, and go to state 117

    ID       [reduce using rule 48 (Infixop)]
    MM       [reduce using rule 48 (Infixop)]
    INT_L    [reduce using rule 48 (Infixop)]
    FLOAT_L  [reduce using rule 48 (Infixop)]
    PP       [reduce using rule 48 (Infixop)]
    '('      [reduce using rule 48 (Infixop)]
    '+'      [reduce using rule 48 (Infixop)]
    '-'      [reduce using rule 48 (Infixop)]

    const_expr  go to state 119
    name        go to state 139
    term        go to state 180
    factor      go to state 125
    PrefixOp    go to state 126
    call        go to state 141


State 188

  104 bool_expr: expr Infixop . expr

    ID       shift, and go to state 107
    MM       shift, and go to state 109
    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58
    PP       shift, and go to state 110
    '('      shift, and go to state 114
    '+'      shift, and go to state 116
    '-'      shift, and go to state 117

    const_expr  go to state 119
    name        go to state 139
    expr        go to state 197
    term        go to state 124
    factor      go to state 125
    PrefixOp    go to state 126
    call        go to state 141


State 189

  100 conditional: IF '(' bool_expr ')' . simple ELSE simple
  101            | IF '(' bool_expr ')' . compound ELSE simple
  102            | IF '(' bool_expr ')' . compound ELSE compound
  103            | IF '(' bool_expr ')' . simple ELSE compound

    ID       shift, and go to state 107
    MM       shift, and go to state 109
    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58
    PP       shift, and go to state 110
    PRINT    shift, and go to state 111
    '{'      shift, and go to state 96
    '('      shift, and go to state 114
    ';'      shift, and go to state 198
    '+'      shift, and go to state 116
    '-'      shift, and go to state 117

    compound    go to state 199
    const_expr  go to state 119
    simple      go to state 200
    name        go to state 122
    expr        go to state 123
    term        go to state 124
    factor      go to state 125
    PrefixOp    go to state 126
    call        go to state 141


State 190

   75 simple: PRINT '(' expr ')' . ';'

    ';'  shift, and go to state 201


State 191

  105 loop: WHILE '(' bool_expr ')' . simple
  106     | WHILE '(' bool_expr ')' . compound

    ID       shift, and go to state 107
    MM       shift, and go to state 109
    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58
    PP       shift, and go to state 110
    PRINT    shift, and go to state 111
    '{'      shift, and go to state 96
    '('      shift, and go to state 114
    ';'      shift, and go to state 198
    '+'      shift, and go to state 116
    '-'      shift, and go to state 117

    compound    go to state 202
    const_expr  go to state 119
    simple      go to state 203
    name        go to state 122
    expr        go to state 123
    term        go to state 124
    factor      go to state 125
    PrefixOp    go to state 126
    call        go to state 141


State 192

  118 expr_list: expr ',' . expr_list

    ID       shift, and go to state 107
    MM       shift, and go to state 109
    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58
    PP       shift, and go to state 110
    '('      shift, and go to state 114
    '+'      shift, and go to state 116
    '-'      shift, and go to state 117

    const_expr  go to state 119
    name        go to state 139
    expr        go to state 175
    term        go to state 124
    factor      go to state 125
    PrefixOp    go to state 126
    call        go to state 141
    expr_list   go to state 204


State 193

  116 call: name '(' expr_list ')' . ';'

    ';'  shift, and go to state 205


State 194

   74 simple: name '=' expr ';' .

    $default  reduce using rule 74 (simple)


State 195

   23 compound: '{' $@7 declarations statement $@8 '}' .

    $default  reduce using rule 23 (compound)


State 196

  107 loop: FOR '(' ForInitOpt ';' bool_expr . ';' ForUpdateOpt ')' simple
  108     | FOR '(' ForInitOpt ';' bool_expr . ';' ForUpdateOpt ')' compound

    ';'  shift, and go to state 206


State 197

   83 expr: expr . '+' term
   84     | expr . '-' term
  104 bool_expr: expr Infixop expr .

    '+'  shift, and go to state 152
    '-'  shift, and go to state 153

    $default  reduce using rule 104 (bool_expr)


State 198

   79 simple: ';' .

    $default  reduce using rule 79 (simple)


State 199

  101 conditional: IF '(' bool_expr ')' compound . ELSE simple
  102            | IF '(' bool_expr ')' compound . ELSE compound

    ELSE  shift, and go to state 207


State 200

  100 conditional: IF '(' bool_expr ')' simple . ELSE simple
  103            | IF '(' bool_expr ')' simple . ELSE compound

    ELSE  shift, and go to state 208


State 201

   75 simple: PRINT '(' expr ')' ';' .

    $default  reduce using rule 75 (simple)


State 202

  106 loop: WHILE '(' bool_expr ')' compound .

    $default  reduce using rule 106 (loop)


State 203

  105 loop: WHILE '(' bool_expr ')' simple .

    $default  reduce using rule 105 (loop)


State 204

  118 expr_list: expr ',' expr_list .

    $default  reduce using rule 118 (expr_list)


State 205

  116 call: name '(' expr_list ')' ';' .

    $default  reduce using rule 116 (call)


State 206

  107 loop: FOR '(' ForInitOpt ';' bool_expr ';' . ForUpdateOpt ')' simple
  108     | FOR '(' ForInitOpt ';' bool_expr ';' . ForUpdateOpt ')' compound

    ID  shift, and go to state 209

    $default  reduce using rule 112 (ForUpdateOpt)

    ForUpdateOpt  go to state 210


State 207

  101 conditional: IF '(' bool_expr ')' compound ELSE . simple
  102            | IF '(' bool_expr ')' compound ELSE . compound

    ID       shift, and go to state 107
    MM       shift, and go to state 109
    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58
    PP       shift, and go to state 110
    PRINT    shift, and go to state 111
    '{'      shift, and go to state 96
    '('      shift, and go to state 114
    ';'      shift, and go to state 198
    '+'      shift, and go to state 116
    '-'      shift, and go to state 117

    compound    go to state 211
    const_expr  go to state 119
    simple      go to state 212
    name        go to state 122
    expr        go to state 123
    term        go to state 124
    factor      go to state 125
    PrefixOp    go to state 126
    call        go to state 141


State 208

  100 conditional: IF '(' bool_expr ')' simple ELSE . simple
  103            | IF '(' bool_expr ')' simple ELSE . compound

    ID       shift, and go to state 107
    MM       shift, and go to state 109
    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58
    PP       shift, and go to state 110
    PRINT    shift, and go to state 111
    '{'      shift, and go to state 96
    '('      shift, and go to state 114
    ';'      shift, and go to state 198
    '+'      shift, and go to state 116
    '-'      shift, and go to state 117

    compound    go to state 213
    const_expr  go to state 119
    simple      go to state 214
    name        go to state 122
    expr        go to state 123
    term        go to state 124
    factor      go to state 125
    PrefixOp    go to state 126
    call        go to state 141


State 209

  113 ForUpdateOpt: ID . PP
  114             | ID . MM

    MM  shift, and go to state 215
    PP  shift, and go to state 216


State 210

  107 loop: FOR '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt . ')' simple
  108     | FOR '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt . ')' compound

    ')'  shift, and go to state 217


State 211

  102 conditional: IF '(' bool_expr ')' compound ELSE compound .

    $default  reduce using rule 102 (conditional)


State 212

  101 conditional: IF '(' bool_expr ')' compound ELSE simple .

    $default  reduce using rule 101 (conditional)


State 213

  103 conditional: IF '(' bool_expr ')' simple ELSE compound .

    $default  reduce using rule 103 (conditional)


State 214

  100 conditional: IF '(' bool_expr ')' simple ELSE simple .

    $default  reduce using rule 100 (conditional)


State 215

  114 ForUpdateOpt: ID MM .

    $default  reduce using rule 114 (ForUpdateOpt)


State 216

  113 ForUpdateOpt: ID PP .

    $default  reduce using rule 113 (ForUpdateOpt)


State 217

  107 loop: FOR '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' . simple
  108     | FOR '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' . compound

    ID       shift, and go to state 107
    MM       shift, and go to state 109
    INT_L    shift, and go to state 57
    FLOAT_L  shift, and go to state 58
    PP       shift, and go to state 110
    PRINT    shift, and go to state 111
    '{'      shift, and go to state 96
    '('      shift, and go to state 114
    ';'      shift, and go to state 198
    '+'      shift, and go to state 116
    '-'      shift, and go to state 117

    compound    go to state 218
    const_expr  go to state 119
    simple      go to state 219
    name        go to state 122
    expr        go to state 123
    term        go to state 124
    factor      go to state 125
    PrefixOp    go to state 126
    call        go to state 141


State 218

  108 loop: FOR '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' compound .

    $default  reduce using rule 108 (loop)


State 219

  107 loop: FOR '(' ForInitOpt ';' bool_expr ';' ForUpdateOpt ')' simple .

    $default  reduce using rule 107 (loop)
